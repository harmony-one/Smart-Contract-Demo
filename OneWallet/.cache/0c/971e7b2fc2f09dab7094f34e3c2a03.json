{"id":"../node_modules/@harmony-js/network/dist/providers/emitter.js","dependencies":[{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/emitter.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/src/providers/emitter.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":8,"column":22},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/emitter.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"mitt","loc":{"line":9,"column":45},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/emitter.js","resolved":"/home/rachit/Projects/demo/web/node_modules/mitt/dist/mitt.es.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = void 0;\nvar tslib_1 = require(\"tslib\");\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\nvar Emitter = /** @class */ (function () {\n    function Emitter() {\n        var _this = this;\n        this.handlers = {};\n        this.emitter = mitt_1.default(this.handlers);\n        this.off = this.emitter.off.bind(this);\n        this.emit = this.emitter.emit.bind(this);\n        // tslint:disable-next-line: no-empty\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        this.then = this.promise.then.bind(this.promise);\n    }\n    Emitter.prototype.resetHandlers = function () {\n        // tslint:disable-next-line: forin\n        for (var i in this.handlers) {\n            delete this.handlers[i];\n        }\n    };\n    Emitter.prototype.on = function (type, handler) {\n        this.emitter.on(type, handler);\n        return this;\n    };\n    Emitter.prototype.once = function (type, handler) {\n        var _this = this;\n        this.emitter.on(type, function (e) {\n            handler(e);\n            _this.removeEventListener(type);\n        });\n    };\n    Emitter.prototype.addEventListener = function (type, handler) {\n        this.emitter.on(type, handler);\n    };\n    Emitter.prototype.removeEventListener = function (type, handler) {\n        if (!type) {\n            this.handlers = {};\n            return;\n        }\n        if (!handler) {\n            delete this.handlers[type];\n        }\n        else {\n            return this.emitter.off(type, handler);\n        }\n    };\n    Emitter.prototype.onError = function (error) {\n        this.emitter.on('error', error);\n        this.removeEventListener('*');\n    };\n    Emitter.prototype.onData = function (data) {\n        this.emitter.on('data', data);\n        this.removeEventListener('*');\n    };\n    Emitter.prototype.listenerCount = function (listenKey) {\n        var count = 0;\n        Object.keys(this.handlers).forEach(function (val) {\n            if (listenKey === val) {\n                count += 1;\n            }\n        });\n        return count;\n    };\n    return Emitter;\n}());\nexports.Emitter = Emitter;\n"},"sourceMaps":{"js":{"version":3,"file":"emitter.js","sourceRoot":"","sources":["../../src/providers/emitter.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;AAEH,sDAAwB;AAExB;IASE;QAAA,iBAUC;QAlBD,aAAQ,GAAS,EAAE,CAAC;QASlB,IAAI,CAAC,OAAO,GAAG,cAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,qCAAqC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACzC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,+BAAa,GAAb;QACE,kCAAkC;QAClC,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzB;IACH,CAAC;IACD,oBAAE,GAAF,UAAG,IAAY,EAAE,OAAqB;QACpC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,sBAAI,GAAJ,UAAK,IAAY,EAAE,OAAqB;QAAxC,iBAKC;QAJC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,UAAC,CAAM;YAC3B,OAAO,CAAC,CAAC,CAAC,CAAC;YACX,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAgB,GAAhB,UAAiB,IAAY,EAAE,OAAqB;QAClD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACjC,CAAC;IAED,qCAAmB,GAAnB,UAAoB,IAAa,EAAE,OAAsB;QACvD,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC5B;aAAM;YACL,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACxC;IACH,CAAC;IACD,yBAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IACD,wBAAM,GAAN,UAAO,IAAS;QACd,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IACD,+BAAa,GAAb,UAAc,SAAc;QAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YACrC,IAAI,SAAS,KAAK,GAAG,EAAE;gBACrB,KAAK,IAAI,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IACH,cAAC;AAAD,CAAC,AAtED,IAsEC;AAEQ,0BAAO","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport mitt from 'mitt';\n\nclass Emitter {\n  handlers?: any = {};\n  emitter: mitt.Emitter;\n  off: (type: string, handler: mitt.Handler) => void;\n  emit: (type: string, event?: any) => void;\n  promise: Promise<{}>;\n  resolve?: any;\n  reject?: any;\n  then?: any;\n  constructor() {\n    this.emitter = mitt(this.handlers);\n    this.off = this.emitter.off.bind(this);\n    this.emit = this.emitter.emit.bind(this);\n    // tslint:disable-next-line: no-empty\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    this.then = this.promise.then.bind(this.promise);\n  }\n\n  resetHandlers() {\n    // tslint:disable-next-line: forin\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n  on(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    return this;\n  }\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, (e: any) => {\n      handler(e);\n      this.removeEventListener(type);\n    });\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  onError(error: any) {\n    this.emitter.on('error', error);\n    this.removeEventListener('*');\n  }\n  onData(data: any) {\n    this.emitter.on('data', data);\n    this.removeEventListener('*');\n  }\n  listenerCount(listenKey: any) {\n    let count = 0;\n    Object.keys(this.handlers).forEach((val) => {\n      if (listenKey === val) {\n        count += 1;\n      }\n    });\n    return count;\n  }\n}\n\nexport { Emitter };\n"]}},"error":null,"hash":"5aab896f02d4856447f5843231475069","cacheData":{"env":{}}}