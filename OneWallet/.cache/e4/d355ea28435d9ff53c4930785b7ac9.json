{"id":"../node_modules/@harmony-js/utils/dist/transformers.js","dependencies":[{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/transformers.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/src/transformers.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/package.json","includedInParent":true,"mtime":1605232158218},{"name":"tslib","loc":{"line":8,"column":22},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/transformers.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"bn.js","loc":{"line":9,"column":46},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/transformers.js","resolved":"/home/rachit/Projects/demo/web/node_modules/bn.js/lib/bn.js"},{"name":"./validators","loc":{"line":10,"column":27},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/transformers.js","resolved":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/validators.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-utils\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Unit = exports.fromWei = exports.toWei = exports.hexToBN = exports.hexToNumber = exports.numberToHex = exports.strip0x = exports.add0xToString = exports.numToStr = exports.numberToString = exports.unitMap = exports.Units = void 0;\nvar tslib_1 = require(\"tslib\");\nvar bn_js_1 = tslib_1.__importDefault(require(\"bn.js\"));\nvar validators_1 = require(\"./validators\");\nvar Units;\n(function (Units) {\n    Units[\"wei\"] = \"wei\";\n    Units[\"Kwei\"] = \"Kwei\";\n    Units[\"Mwei\"] = \"Mwei\";\n    Units[\"Gwei\"] = \"Gwei\";\n    Units[\"szabo\"] = \"szabo\";\n    Units[\"finney\"] = \"finney\";\n    Units[\"ether\"] = \"ether\";\n    Units[\"one\"] = \"one\";\n    Units[\"Kether\"] = \"Kether\";\n    Units[\"Mether\"] = \"Mether\";\n    Units[\"Gether\"] = \"Gether\";\n    Units[\"Tether\"] = \"Tether\";\n})(Units = exports.Units || (exports.Units = {}));\n/** @hidden */\nexports.unitMap = new Map([\n    [Units.wei, '1'],\n    [Units.Kwei, '1000'],\n    [Units.Mwei, '1000000'],\n    [Units.Gwei, '1000000000'],\n    [Units.szabo, '1000000000000'],\n    [Units.finney, '1000000000000000'],\n    [Units.ether, '1000000000000000000'],\n    [Units.one, '1000000000000000000'],\n    [Units.Kether, '1000000000000000000000'],\n    [Units.Mether, '1000000000000000000000000'],\n    [Units.Gether, '1000000000000000000000000000'],\n    [Units.Tether, '1000000000000000000000000000000'],\n]);\n/** @hidden */\nvar DEFAULT_OPTIONS = {\n    pad: false,\n};\n/**\n * Convert Number to String\n */\nexports.numberToString = function (obj, radix) {\n    if (radix === void 0) { radix = 10; }\n    if (bn_js_1.default.isBN(obj)) {\n        return obj.toString(radix);\n    }\n    else if (validators_1.isNumber(obj)) {\n        return new bn_js_1.default(obj).toString(radix);\n    }\n    else if (validators_1.isString(obj) && validators_1.isNumber(Number(obj))) {\n        return new bn_js_1.default(obj).toString(radix);\n    }\n    else {\n        throw new Error(\"cannot parse number:\" + obj + \" to string\");\n    }\n};\n/**\n * Convert Number to String\n */\nexports.numToStr = function (input) {\n    if (typeof input === 'string') {\n        if (!input.match(/^-?[0-9.]+$/)) {\n            throw new Error(\"while converting number to string, invalid number value '\" + input + \"', should be a number matching (^-?[0-9.]+).\");\n        }\n        return input;\n    }\n    else if (typeof input === 'number') {\n        return String(input);\n    }\n    else if (bn_js_1.default.isBN(input)) {\n        return input.toString(10);\n    }\n    throw new Error(\"while converting number to string, invalid number value '\" + input + \"' type \" + typeof input + \".\");\n};\nexports.add0xToString = function (obj) {\n    if (validators_1.isString(obj) && !obj.startsWith('-')) {\n        return '0x' + obj.replace('0x', '');\n    }\n    else if (validators_1.isString(obj) && obj.startsWith('-')) {\n        return '-0x' + obj.replace('-', '');\n    }\n    else {\n        throw new Error(obj + \" is not String\");\n    }\n};\nexports.strip0x = function (obj) {\n    return obj.toLowerCase().replace('0x', '');\n};\n/**\n * Convert number to hex\n */\nexports.numberToHex = function (obj) {\n    try {\n        return exports.add0xToString(exports.numberToString(obj, 16));\n    }\n    catch (error) {\n        throw error;\n    }\n};\n/**\n * Convert hex to Decimal number\n */\nexports.hexToNumber = function (hex) {\n    if (validators_1.isHex(hex) && hex[0] !== '-') {\n        return new bn_js_1.default(exports.strip0x(hex), 'hex').toString();\n    }\n    else if (validators_1.isHex(hex) && hex[0] === '-') {\n        var result = new bn_js_1.default(hex.substring(3), 16);\n        return result.mul(new bn_js_1.default(-1)).toString();\n    }\n    else {\n        throw new Error(hex + \" is not hex number\");\n    }\n};\n/**\n * Convert hex to Big Number\n */\nexports.hexToBN = function (hex) {\n    if (validators_1.isHex(hex) && hex[0] !== '-') {\n        return new bn_js_1.default(exports.strip0x(hex), 'hex');\n    }\n    else if (validators_1.isHex(hex) && hex[0] === '-') {\n        var result = new bn_js_1.default(hex.substring(3), 16);\n        return result.mul(new bn_js_1.default(-1));\n    }\n    else {\n        throw new Error(hex + \" is not hex number\");\n    }\n};\n/**\n * Converts any ONE value into wei\n */\nexports.toWei = function (input, unit) {\n    try {\n        var inputStr = exports.numToStr(input);\n        var baseStr = exports.unitMap.get(unit);\n        if (!baseStr) {\n            throw new Error(\"No unit of type \" + unit + \" exists.\");\n        }\n        var baseNumDecimals = baseStr.length - 1;\n        var base = new bn_js_1.default(baseStr, 10);\n        // Is it negative?\n        var isNegative = inputStr.substring(0, 1) === '-';\n        if (isNegative) {\n            inputStr = inputStr.substring(1);\n        }\n        if (inputStr === '.') {\n            throw new Error(\"Cannot convert \" + inputStr + \" to wei.\");\n        }\n        // Split it into a whole and fractional part\n        var comps = inputStr.split('.'); // eslint-disable-line\n        if (comps.length > 2) {\n            throw new Error(\"Cannot convert \" + inputStr + \" to wei.\");\n        }\n        var _a = tslib_1.__read(comps, 2), whole = _a[0], fraction = _a[1];\n        if (!whole) {\n            whole = '0';\n        }\n        if (!fraction) {\n            fraction = '0';\n        }\n        if (fraction.length > baseNumDecimals) {\n            throw new Error(\"Cannot convert \" + inputStr + \" to wei.\");\n        }\n        while (fraction.length < baseNumDecimals) {\n            fraction += '0';\n        }\n        var wholeBN = new bn_js_1.default(whole);\n        var fractionBN = new bn_js_1.default(fraction);\n        var wei = wholeBN.mul(base).add(fractionBN);\n        if (isNegative) {\n            wei = wei.neg();\n        }\n        return new bn_js_1.default(wei.toString(10), 10);\n    }\n    catch (error) {\n        throw error;\n    }\n};\n/**\n * Converts any wei value into a ONE value.\n */\nexports.fromWei = function (wei, unit, options) {\n    if (options === void 0) { options = DEFAULT_OPTIONS; }\n    try {\n        var weiBN = !bn_js_1.default.isBN(wei) ? new bn_js_1.default(wei) : wei;\n        if (unit === 'wei') {\n            return weiBN.toString(10);\n        }\n        var baseStr = exports.unitMap.get(unit);\n        if (!baseStr) {\n            throw new Error(\"No unit of type \" + unit + \" exists.\");\n        }\n        var base = new bn_js_1.default(baseStr, 10);\n        var baseNumDecimals = baseStr.length - 1;\n        var fraction = weiBN\n            .abs()\n            .mod(base)\n            .toString(10);\n        // prepend 0s to the fraction half\n        while (fraction.length < baseNumDecimals) {\n            fraction = \"0\" + fraction;\n        }\n        if (!options.pad) {\n            /* eslint-disable prefer-destructuring */\n            var matchFraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/);\n            fraction = matchFraction ? matchFraction[1] : '0';\n        }\n        var whole = weiBN.div(base).toString(10);\n        return fraction === '0' ? \"\" + whole : whole + \".\" + fraction;\n    }\n    catch (error) {\n        throw error;\n    }\n};\nvar Unit = /** @class */ (function () {\n    function Unit(str) {\n        if (!bn_js_1.default.isBN(str) && typeof str !== 'number' && validators_1.isHex(str)) {\n            this.unit = exports.hexToNumber(str);\n        }\n        else if (!bn_js_1.default.isBN(str) && typeof str === 'number') {\n            this.unit = str.toString();\n        }\n        else if (str === '0x') {\n            this.unit = exports.hexToNumber('0x0');\n        }\n        else {\n            this.unit = str;\n        }\n        this.wei = new bn_js_1.default(this.unit);\n    }\n    Unit.from = function (str) {\n        return new Unit(str);\n    };\n    Unit.Wei = function (str) {\n        return new Unit(str).asWei();\n    };\n    Unit.Kwei = function (str) {\n        return new Unit(str).asKwei();\n    };\n    Unit.Mwei = function (str) {\n        return new Unit(str).asMwei();\n    };\n    Unit.Gwei = function (str) {\n        return new Unit(str).asGwei();\n    };\n    Unit.Szabo = function (str) {\n        return new Unit(str).asSzabo();\n    };\n    Unit.Finney = function (str) {\n        return new Unit(str).asFinney();\n    };\n    Unit.Ether = function (str) {\n        return new Unit(str).asEther();\n    };\n    Unit.One = function (str) {\n        return new Unit(str).asOne();\n    };\n    Unit.Kether = function (str) {\n        return new Unit(str).asKether();\n    };\n    Unit.Mether = function (str) {\n        return new Unit(str).asMether();\n    };\n    Unit.Gether = function (str) {\n        return new Unit(str).asGether();\n    };\n    Unit.Tether = function (str) {\n        return new Unit(str).asTether();\n    };\n    Unit.prototype.asWei = function () {\n        this.wei = new bn_js_1.default(this.unit);\n        return this;\n    };\n    Unit.prototype.asKwei = function () {\n        this.wei = exports.toWei(this.unit, Units.Kwei);\n        return this;\n    };\n    Unit.prototype.asMwei = function () {\n        this.wei = exports.toWei(this.unit, Units.Mwei);\n        return this;\n    };\n    Unit.prototype.asGwei = function () {\n        this.wei = exports.toWei(this.unit, Units.Gwei);\n        return this;\n    };\n    Unit.prototype.asSzabo = function () {\n        this.wei = exports.toWei(this.unit, Units.szabo);\n        return this;\n    };\n    Unit.prototype.asFinney = function () {\n        this.wei = exports.toWei(this.unit, Units.finney);\n        return this;\n    };\n    Unit.prototype.asEther = function () {\n        this.wei = exports.toWei(this.unit, Units.ether);\n        return this;\n    };\n    Unit.prototype.asOne = function () {\n        this.wei = exports.toWei(this.unit, Units.one);\n        return this;\n    };\n    Unit.prototype.asKether = function () {\n        this.wei = exports.toWei(this.unit, Units.Kether);\n        return this;\n    };\n    Unit.prototype.asMether = function () {\n        this.wei = exports.toWei(this.unit, Units.Mether);\n        return this;\n    };\n    Unit.prototype.asGether = function () {\n        this.wei = exports.toWei(this.unit, Units.Gether);\n        return this;\n    };\n    Unit.prototype.asTether = function () {\n        this.wei = exports.toWei(this.unit, Units.Tether);\n        return this;\n    };\n    Unit.prototype.toWei = function () {\n        if (this.wei) {\n            return this.wei;\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toKwei = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Kwei);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toGwei = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Gwei);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toMwei = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Mwei);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toSzabo = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.szabo);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toFinney = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.finney);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toEther = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.ether);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toOne = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.one);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toKether = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Kether);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toMether = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Mether);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toGether = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Gether);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toTether = function () {\n        if (this.wei) {\n            return exports.fromWei(this.wei, Units.Tether);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toWeiString = function () {\n        if (this.wei) {\n            return this.wei.toString();\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    Unit.prototype.toHex = function () {\n        if (this.wei) {\n            return exports.numberToHex(this.wei);\n        }\n        else {\n            throw new Error('error transforming');\n        }\n    };\n    return Unit;\n}());\nexports.Unit = Unit;\n"},"sourceMaps":{"js":{"version":3,"file":"transformers.js","sourceRoot":"","sources":["../src/transformers.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-utils\n */\n\nimport BN from 'bn.js';\nimport { isString, isNumber, isHex } from './validators';\n\nexport enum Units {\n  wei = 'wei',\n  Kwei = 'Kwei',\n  Mwei = 'Mwei',\n  Gwei = 'Gwei',\n  szabo = 'szabo',\n  finney = 'finney',\n  ether = 'ether',\n  one = 'one',\n  Kether = 'Kether',\n  Mether = 'Mether',\n  Gether = 'Gether',\n  Tether = 'Tether',\n}\n\n/** @hidden */\nexport const unitMap = new Map([\n  [Units.wei, '1'],\n  [Units.Kwei, '1000'], // 1e3 wei\n  [Units.Mwei, '1000000'], // 1e6 wei\n  [Units.Gwei, '1000000000'], // 1e9 wei\n  [Units.szabo, '1000000000000'], // 1e12 wei\n  [Units.finney, '1000000000000000'], // 1e15 wei\n  [Units.ether, '1000000000000000000'], // 1e18 wei\n  [Units.one, '1000000000000000000'], // 1e18 wei\n  [Units.Kether, '1000000000000000000000'], // 1e21 wei\n  [Units.Mether, '1000000000000000000000000'], // 1e24 wei\n  [Units.Gether, '1000000000000000000000000000'], // 1e27 wei\n  [Units.Tether, '1000000000000000000000000000000'], // 1e30 wei\n]);\n\n/** @hidden */\nconst DEFAULT_OPTIONS = {\n  pad: false,\n};\n\n/**\n * Convert Number to String\n */\nexport const numberToString = (obj: BN | number | string, radix: number = 10): string => {\n  if (BN.isBN(obj)) {\n    return obj.toString(radix);\n  } else if (isNumber(obj)) {\n    return new BN(obj).toString(radix);\n  } else if (isString(obj) && isNumber(Number(obj))) {\n    return new BN(obj).toString(radix);\n  } else {\n    throw new Error(`cannot parse number:${obj} to string`);\n  }\n};\n\n/**\n * Convert Number to String\n */\nexport const numToStr = (input: any) => {\n  if (typeof input === 'string') {\n    if (!input.match(/^-?[0-9.]+$/)) {\n      throw new Error(\n        `while converting number to string, invalid number value '${input}', should be a number matching (^-?[0-9.]+).`,\n      );\n    }\n    return input;\n  } else if (typeof input === 'number') {\n    return String(input);\n  } else if (BN.isBN(input)) {\n    return input.toString(10);\n  }\n\n  throw new Error(\n    `while converting number to string, invalid number value '${input}' type ${typeof input}.`,\n  );\n};\n\nexport const add0xToString = (obj: string): string => {\n  if (isString(obj) && !obj.startsWith('-')) {\n    return '0x' + obj.replace('0x', '');\n  } else if (isString(obj) && obj.startsWith('-')) {\n    return '-0x' + obj.replace('-', '');\n  } else {\n    throw new Error(`${obj} is not String`);\n  }\n};\n\nexport const strip0x = (obj: string): string => {\n  return obj.toLowerCase().replace('0x', '');\n};\n\n/**\n * Convert number to hex\n */\nexport const numberToHex = (obj: any): string => {\n  try {\n    return add0xToString(numberToString(obj, 16));\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\n * Convert hex to Decimal number\n */\nexport const hexToNumber = (hex: string): string => {\n  if (isHex(hex) && hex[0] !== '-') {\n    return new BN(strip0x(hex), 'hex').toString();\n  } else if (isHex(hex) && hex[0] === '-') {\n    const result: BN = new BN(hex.substring(3), 16);\n    return result.mul(new BN(-1)).toString();\n  } else {\n    throw new Error(`${hex} is not hex number`);\n  }\n};\n\n/**\n * Convert hex to Big Number\n */\nexport const hexToBN = (hex: string): BN => {\n  if (isHex(hex) && hex[0] !== '-') {\n    return new BN(strip0x(hex), 'hex');\n  } else if (isHex(hex) && hex[0] === '-') {\n    const result: BN = new BN(hex.substring(3), 16);\n    return result.mul(new BN(-1));\n  } else {\n    throw new Error(`${hex} is not hex number`);\n  }\n};\n\n/**\n * Converts any ONE value into wei\n */\nexport const toWei = (input: BN | string, unit: Units): BN => {\n  try {\n    let inputStr = numToStr(input);\n    const baseStr = unitMap.get(unit);\n\n    if (!baseStr) {\n      throw new Error(`No unit of type ${unit} exists.`);\n    }\n\n    const baseNumDecimals = baseStr.length - 1;\n    const base = new BN(baseStr, 10);\n\n    // Is it negative?\n    const isNegative = inputStr.substring(0, 1) === '-';\n    if (isNegative) {\n      inputStr = inputStr.substring(1);\n    }\n\n    if (inputStr === '.') {\n      throw new Error(`Cannot convert ${inputStr} to wei.`);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = inputStr.split('.'); // eslint-disable-line\n    if (comps.length > 2) {\n      throw new Error(`Cannot convert ${inputStr} to wei.`);\n    }\n\n    let [whole, fraction] = comps;\n\n    if (!whole) {\n      whole = '0';\n    }\n    if (!fraction) {\n      fraction = '0';\n    }\n    if (fraction.length > baseNumDecimals) {\n      throw new Error(`Cannot convert ${inputStr} to wei.`);\n    }\n\n    while (fraction.length < baseNumDecimals) {\n      fraction += '0';\n    }\n\n    const wholeBN = new BN(whole);\n    const fractionBN = new BN(fraction);\n    let wei = wholeBN.mul(base).add(fractionBN);\n\n    if (isNegative) {\n      wei = wei.neg();\n    }\n\n    return new BN(wei.toString(10), 10);\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\n * Converts any wei value into a ONE value.\n */\nexport const fromWei = (wei: BN | string, unit: Units, options: any = DEFAULT_OPTIONS): string => {\n  try {\n    const weiBN: BN = !BN.isBN(wei) ? new BN(wei) : wei;\n\n    if (unit === 'wei') {\n      return weiBN.toString(10);\n    }\n\n    const baseStr = unitMap.get(unit);\n\n    if (!baseStr) {\n      throw new Error(`No unit of type ${unit} exists.`);\n    }\n\n    const base = new BN(baseStr, 10);\n    const baseNumDecimals = baseStr.length - 1;\n\n    let fraction = weiBN\n      .abs()\n      .mod(base)\n      .toString(10);\n\n    // prepend 0s to the fraction half\n    while (fraction.length < baseNumDecimals) {\n      fraction = `0${fraction}`;\n    }\n\n    if (!options.pad) {\n      /* eslint-disable prefer-destructuring */\n      const matchFraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/);\n      fraction = matchFraction ? matchFraction[1] : '0';\n    }\n\n    const whole = weiBN.div(base).toString(10);\n\n    return fraction === '0' ? `${whole}` : `${whole}.${fraction}`;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport class Unit {\n  static from(str: BN | string) {\n    return new Unit(str);\n  }\n\n  static Wei(str: BN | string) {\n    return new Unit(str).asWei();\n  }\n  static Kwei(str: BN | string) {\n    return new Unit(str).asKwei();\n  }\n  static Mwei(str: BN | string) {\n    return new Unit(str).asMwei();\n  }\n  static Gwei(str: BN | string) {\n    return new Unit(str).asGwei();\n  }\n  static Szabo(str: BN | string) {\n    return new Unit(str).asSzabo();\n  }\n  static Finney(str: BN | string) {\n    return new Unit(str).asFinney();\n  }\n  static Ether(str: BN | string) {\n    return new Unit(str).asEther();\n  }\n  static One(str: BN | string) {\n    return new Unit(str).asOne();\n  }\n  static Kether(str: BN | string) {\n    return new Unit(str).asKether();\n  }\n  static Mether(str: BN | string) {\n    return new Unit(str).asMether();\n  }\n  static Gether(str: BN | string) {\n    return new Unit(str).asGether();\n  }\n  static Tether(str: BN | string) {\n    return new Unit(str).asTether();\n  }\n\n  wei: BN;\n  unit: BN | string;\n\n  constructor(str: BN | string | number) {\n    if (!BN.isBN(str) && typeof str !== 'number' && isHex(str)) {\n      this.unit = hexToNumber(str);\n    } else if (!BN.isBN(str) && typeof str === 'number') {\n      this.unit = str.toString();\n    } else if (str === '0x') {\n      this.unit = hexToNumber('0x0');\n    } else {\n      this.unit = str;\n    }\n\n    this.wei = new BN(this.unit);\n  }\n\n  asWei() {\n    this.wei = new BN(this.unit);\n    return this;\n  }\n  asKwei() {\n    this.wei = toWei(this.unit, Units.Kwei);\n    return this;\n  }\n  asMwei() {\n    this.wei = toWei(this.unit, Units.Mwei);\n    return this;\n  }\n  asGwei() {\n    this.wei = toWei(this.unit, Units.Gwei);\n    return this;\n  }\n  asSzabo() {\n    this.wei = toWei(this.unit, Units.szabo);\n    return this;\n  }\n  asFinney() {\n    this.wei = toWei(this.unit, Units.finney);\n    return this;\n  }\n  asEther() {\n    this.wei = toWei(this.unit, Units.ether);\n    return this;\n  }\n  asOne() {\n    this.wei = toWei(this.unit, Units.one);\n    return this;\n  }\n  asKether() {\n    this.wei = toWei(this.unit, Units.Kether);\n    return this;\n  }\n  asMether() {\n    this.wei = toWei(this.unit, Units.Mether);\n    return this;\n  }\n  asGether() {\n    this.wei = toWei(this.unit, Units.Gether);\n    return this;\n  }\n  asTether() {\n    this.wei = toWei(this.unit, Units.Tether);\n    return this;\n  }\n\n  toWei() {\n    if (this.wei) {\n      return this.wei;\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n\n  toKwei() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Kwei);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toGwei() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Gwei);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toMwei() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Mwei);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toSzabo() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.szabo);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toFinney() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.finney);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toEther() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.ether);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toOne() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.one);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toKether() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Kether);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toMether() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Mether);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toGether() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Gether);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toTether() {\n    if (this.wei) {\n      return fromWei(this.wei, Units.Tether);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n\n  toWeiString() {\n    if (this.wei) {\n      return this.wei.toString();\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n  toHex() {\n    if (this.wei) {\n      return numberToHex(this.wei);\n    } else {\n      throw new Error('error transforming');\n    }\n  }\n}\n"]}},"error":null,"hash":"e9194c4e099bb8d5acd6066db043fc65","cacheData":{"env":{}}}