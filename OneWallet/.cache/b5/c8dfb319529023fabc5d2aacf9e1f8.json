{"id":"../node_modules/@harmony-js/network/dist/providers/baseSocket.js","dependencies":[{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseSocket.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/src/providers/baseSocket.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseSocket.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"@harmony-js/utils","loc":{"line":10,"column":22},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseSocket.js","resolved":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/utils/dist/index.js"},{"name":"mitt","loc":{"line":11,"column":45},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseSocket.js","resolved":"/home/rachit/Projects/demo/web/node_modules/mitt/dist/mitt.es.js"},{"name":"./baseProvider","loc":{"line":12,"column":29},"parent":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseSocket.js","resolved":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/network/dist/providers/baseProvider.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSocket = exports.EmittType = exports.SocketState = exports.SocketConnection = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar mitt_1 = tslib_1.__importDefault(require(\"mitt\"));\nvar baseProvider_1 = require(\"./baseProvider\");\nvar SocketConnection;\n(function (SocketConnection) {\n    SocketConnection[\"READY\"] = \"ready\";\n    SocketConnection[\"CONNECT\"] = \"connect\";\n    SocketConnection[\"ERROR\"] = \"error\";\n    SocketConnection[\"CLOSE\"] = \"close\";\n})(SocketConnection = exports.SocketConnection || (exports.SocketConnection = {}));\nvar SocketState;\n(function (SocketState) {\n    SocketState[\"SOCKET_MESSAGE\"] = \"socket_message\";\n    SocketState[\"SOCKET_READY\"] = \"socket_ready\";\n    SocketState[\"SOCKET_CLOSE\"] = \"socket_close\";\n    SocketState[\"SOCKET_ERROR\"] = \"socket_error\";\n    SocketState[\"SOCKET_CONNECT\"] = \"socket_connect\";\n    SocketState[\"SOCKET_NETWORK_CHANGED\"] = \"socket_networkChanged\";\n    SocketState[\"SOCKET_ACCOUNTS_CHANGED\"] = \"socket_accountsChanged\";\n})(SocketState = exports.SocketState || (exports.SocketState = {}));\nvar EmittType;\n(function (EmittType) {\n    EmittType[\"INSTANCE\"] = \"instance\";\n    EmittType[\"PUBSUB\"] = \"pubsub\";\n})(EmittType = exports.EmittType || (exports.EmittType = {}));\nvar BaseSocket = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseSocket, _super);\n    function BaseSocket(url) {\n        var _this = _super.call(this, url) || this;\n        _this.handlers = {};\n        if (!utils_1.isWs(url)) {\n            throw new Error(url + \" is not websocket\");\n        }\n        _this.url = url;\n        _this.emitter = mitt_1.default(_this.handlers);\n        return _this;\n    }\n    BaseSocket.prototype.resetHandlers = function () {\n        // tslint:disable-next-line: forin\n        for (var i in this.handlers) {\n            delete this.handlers[i];\n        }\n    };\n    BaseSocket.prototype.once = function (type, handler) {\n        this.emitter.on(type, handler);\n        this.removeEventListener(type);\n    };\n    BaseSocket.prototype.addEventListener = function (type, handler) {\n        this.emitter.on(type, handler);\n    };\n    BaseSocket.prototype.removeEventListener = function (type, handler) {\n        if (!type) {\n            this.handlers = {};\n            return;\n        }\n        if (!handler) {\n            delete this.handlers[type];\n        }\n        else {\n            return this.emitter.off(type, handler);\n        }\n    };\n    BaseSocket.prototype.reset = function () {\n        this.removeEventListener('*');\n        // this.registerEventListeners();\n    };\n    BaseSocket.prototype.removeAllSocketListeners = function () {\n        this.removeEventListener(SocketState.SOCKET_MESSAGE);\n        this.removeEventListener(SocketState.SOCKET_READY);\n        this.removeEventListener(SocketState.SOCKET_CLOSE);\n        this.removeEventListener(SocketState.SOCKET_ERROR);\n        this.removeEventListener(SocketState.SOCKET_CONNECT);\n    };\n    BaseSocket.prototype.onReady = function (event) {\n        this.emitter.emit(SocketConnection.READY, event);\n        this.emitter.emit(SocketState.SOCKET_READY, event);\n    };\n    BaseSocket.prototype.onError = function (error) {\n        this.emitter.emit(SocketConnection.ERROR, error);\n        this.emitter.emit(SocketState.SOCKET_ERROR, error);\n        this.removeAllSocketListeners();\n        this.removeEventListener('*');\n    };\n    BaseSocket.prototype.onClose = function (error) {\n        if (error === void 0) { error = null; }\n        this.emitter.emit(SocketConnection.CLOSE, error);\n        this.emitter.emit(SocketState.SOCKET_CLOSE, error);\n        this.removeAllSocketListeners();\n        this.removeEventListener('*');\n    };\n    return BaseSocket;\n}(baseProvider_1.BaseProvider));\nexports.BaseSocket = BaseSocket;\n"},"sourceMaps":{"js":{"version":3,"file":"baseSocket.js","sourceRoot":"","sources":["../../src/providers/baseSocket.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { isWs } from '@harmony-js/utils';\nimport mitt from 'mitt';\nimport { BaseProvider } from './baseProvider';\n\nexport enum SocketConnection {\n  READY = 'ready',\n  CONNECT = 'connect',\n  ERROR = 'error',\n  CLOSE = 'close',\n}\n\nexport enum SocketState {\n  SOCKET_MESSAGE = 'socket_message',\n  SOCKET_READY = 'socket_ready',\n  SOCKET_CLOSE = 'socket_close',\n  SOCKET_ERROR = 'socket_error',\n  SOCKET_CONNECT = 'socket_connect',\n  SOCKET_NETWORK_CHANGED = 'socket_networkChanged',\n  SOCKET_ACCOUNTS_CHANGED = 'socket_accountsChanged',\n}\n\nexport enum EmittType {\n  INSTANCE = 'instance',\n  PUBSUB = 'pubsub',\n}\n\nclass BaseSocket extends BaseProvider {\n  url: string;\n  emitter: mitt.Emitter;\n  handlers: any = {};\n  constructor(url: string) {\n    super(url);\n    if (!isWs(url)) {\n      throw new Error(`${url} is not websocket`);\n    }\n    this.url = url;\n    this.emitter = mitt(this.handlers);\n  }\n  resetHandlers() {\n    // tslint:disable-next-line: forin\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    this.removeEventListener(type);\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  reset() {\n    this.removeEventListener('*');\n    // this.registerEventListeners();\n  }\n  removeAllSocketListeners() {\n    this.removeEventListener(SocketState.SOCKET_MESSAGE);\n    this.removeEventListener(SocketState.SOCKET_READY);\n    this.removeEventListener(SocketState.SOCKET_CLOSE);\n    this.removeEventListener(SocketState.SOCKET_ERROR);\n    this.removeEventListener(SocketState.SOCKET_CONNECT);\n  }\n\n  onReady(event: any) {\n    this.emitter.emit(SocketConnection.READY, event);\n    this.emitter.emit(SocketState.SOCKET_READY, event);\n  }\n  onError(error: any) {\n    this.emitter.emit(SocketConnection.ERROR, error);\n    this.emitter.emit(SocketState.SOCKET_ERROR, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  }\n  onClose(error = null) {\n    this.emitter.emit(SocketConnection.CLOSE, error);\n    this.emitter.emit(SocketState.SOCKET_CLOSE, error);\n    this.removeAllSocketListeners();\n    this.removeEventListener('*');\n  }\n}\n\nexport { BaseSocket };\n"]}},"error":null,"hash":"f91d250abf875bbd46622a5dd27a37cc","cacheData":{"env":{}}}