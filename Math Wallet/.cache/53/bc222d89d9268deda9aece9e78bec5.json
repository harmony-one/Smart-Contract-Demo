{"id":"../node_modules/@harmony-js/staking/dist/factory.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/dist/factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/src/factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/package.json","includedInParent":true,"mtime":1605232158322},{"name":"./stakingTransaction","loc":{"line":8,"column":35},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/dist/factory.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/dist/stakingTransaction.js"},{"name":"@harmony-js/utils","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/dist/factory.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/utils/dist/index.js"},{"name":"@harmony-js/transaction","loc":{"line":10,"column":28},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/staking/dist/factory.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/index.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-staking\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StakingFactory = void 0;\nvar stakingTransaction_1 = require(\"./stakingTransaction\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar transaction_1 = require(\"@harmony-js/transaction\");\nvar StakingFactory = /** @class */ (function () {\n    function StakingFactory(messenger) {\n        this.messenger = messenger;\n        this.nonce = 0;\n        this.gasPrice = new utils_1.Unit('100').asGwei().toHex();\n        this.gasLimit = new utils_1.Unit('210000').asWei().toHex();\n        this.chainId = 1;\n        this.signature = {\n            v: 0,\n            r: '',\n            s: '',\n        };\n    }\n    StakingFactory.prototype.createValidator = function (_a) {\n        var validatorAddress = _a.validatorAddress, description = _a.description, commissionRate = _a.commissionRate, minSelfDelegation = _a.minSelfDelegation, maxTotalDelegation = _a.maxTotalDelegation, slotPubKeys = _a.slotPubKeys, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.CreateValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.CommissionRate(new stakingTransaction_1.Decimal(commissionRate.rate), new stakingTransaction_1.Decimal(commissionRate.maxRate), new stakingTransaction_1.Decimal(commissionRate.maxChangeRate)), minSelfDelegation, maxTotalDelegation, slotPubKeys, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveCreateValidator;\n        return this;\n    };\n    StakingFactory.prototype.editValidator = function (_a) {\n        var validatorAddress = _a.validatorAddress, description = _a.description, commissionRate = _a.commissionRate, minSelfDelegation = _a.minSelfDelegation, maxTotalDelegation = _a.maxTotalDelegation, slotKeyToRemove = _a.slotKeyToRemove, slotKeyToAdd = _a.slotKeyToAdd;\n        this.stakeMsg = new stakingTransaction_1.EditValidator(validatorAddress, new stakingTransaction_1.Description(description.name, description.identity, description.website, description.securityContact, description.details), new stakingTransaction_1.Decimal(commissionRate), minSelfDelegation, maxTotalDelegation, slotKeyToRemove, slotKeyToAdd);\n        this.directive = stakingTransaction_1.Directive.DirectiveEditValidator;\n        return this;\n    };\n    StakingFactory.prototype.delegate = function (_a) {\n        var delegatorAddress = _a.delegatorAddress, validatorAddress = _a.validatorAddress, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.Delegate(delegatorAddress, validatorAddress, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveDelegate;\n        return this;\n    };\n    StakingFactory.prototype.undelegate = function (_a) {\n        var delegatorAddress = _a.delegatorAddress, validatorAddress = _a.validatorAddress, amount = _a.amount;\n        this.stakeMsg = new stakingTransaction_1.Undelegate(delegatorAddress, validatorAddress, amount);\n        this.directive = stakingTransaction_1.Directive.DirectiveUndelegate;\n        return this;\n    };\n    StakingFactory.prototype.collectRewards = function (_a) {\n        var delegatorAddress = _a.delegatorAddress;\n        this.stakeMsg = new stakingTransaction_1.CollectRewards(delegatorAddress);\n        this.directive = stakingTransaction_1.Directive.DirectiveCollectRewards;\n        return this;\n    };\n    StakingFactory.prototype.setTxParams = function (_a) {\n        var nonce = _a.nonce, gasPrice = _a.gasPrice, gasLimit = _a.gasLimit, chainId = _a.chainId, signature = _a.signature;\n        this.nonce = nonce;\n        this.gasPrice = gasPrice;\n        this.gasLimit = gasLimit;\n        this.chainId = chainId;\n        this.signature = signature;\n        return this;\n    };\n    StakingFactory.prototype.build = function () {\n        if (this.directive === undefined) {\n            throw new Error('cannot build stakingTransaction without Directive');\n        }\n        if (this.stakeMsg === undefined) {\n            throw new Error('cannot build stakingTransaction without stakeMsg');\n        }\n        return new stakingTransaction_1.StakingTransaction(this.directive, this.stakeMsg, this.nonce !== undefined ? this.nonce : 0, this.gasPrice !== undefined ? this.gasPrice : new utils_1.Unit('100').asGwei().toHex(), this.gasLimit !== undefined ? this.gasLimit : new utils_1.Unit('210000').asWei().toHex(), this.chainId !== undefined ? this.chainId : 1, this.messenger, transaction_1.TxStatus.INTIALIZED);\n    };\n    StakingFactory.prototype.setMessenger = function (messenger) {\n        this.messenger = messenger;\n    };\n    return StakingFactory;\n}());\nexports.StakingFactory = StakingFactory;\n"},"sourceMaps":{"js":{"version":3,"file":"factory.js","sourceRoot":"","sources":["../src/factory.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-staking\n */\n\nimport { Messenger } from '@harmony-js/network';\nimport { Signature } from '@harmony-js/crypto';\n\nimport {\n  Directive,\n  CreateValidator,\n  EditValidator,\n  Delegate,\n  Undelegate,\n  CollectRewards,\n  Description,\n  CommissionRate,\n  Decimal,\n  StakingTransaction,\n} from './stakingTransaction';\nimport { Unit } from '@harmony-js/utils';\nimport { TxStatus } from '@harmony-js/transaction';\n\n/** @hidden */\nexport interface DescriptionInterface {\n  name: string;\n  identity: string;\n  website: string;\n  securityContact: string;\n  details: string;\n}\n\n/** @hidden */\nexport interface CommissionRateInterface {\n  rate: string;\n  maxRate: string;\n  maxChangeRate: string;\n}\n\nexport class StakingFactory {\n  public messenger: Messenger;\n  public stakeMsg?: CreateValidator | EditValidator | Delegate | Undelegate | CollectRewards;\n  public directive?: Directive;\n  public nonce: number | string;\n  public gasPrice: number | string;\n  public gasLimit: number | string;\n  public chainId: number;\n  public signature: Signature;\n  constructor(messenger: Messenger) {\n    this.messenger = messenger;\n    this.nonce = 0;\n    this.gasPrice = new Unit('100').asGwei().toHex();\n    this.gasLimit = new Unit('210000').asWei().toHex();\n    this.chainId = 1;\n    this.signature = {\n      v: 0,\n      r: '',\n      s: '',\n    };\n  }\n\n  createValidator({\n    validatorAddress,\n    description,\n    commissionRate,\n    minSelfDelegation,\n    maxTotalDelegation,\n    slotPubKeys,\n    amount,\n  }: {\n    validatorAddress: string;\n    description: DescriptionInterface;\n    commissionRate: CommissionRateInterface;\n    minSelfDelegation: number;\n    maxTotalDelegation: number;\n    slotPubKeys: string[];\n    amount: number;\n  }) {\n    this.stakeMsg = new CreateValidator(\n      validatorAddress,\n      new Description(\n        description.name,\n        description.identity,\n        description.website,\n        description.securityContact,\n        description.details,\n      ),\n      new CommissionRate(\n        new Decimal(commissionRate.rate),\n        new Decimal(commissionRate.maxRate),\n        new Decimal(commissionRate.maxChangeRate),\n      ),\n      minSelfDelegation,\n      maxTotalDelegation,\n      slotPubKeys,\n      amount,\n    );\n    this.directive = Directive.DirectiveCreateValidator;\n    return this;\n  }\n\n  editValidator({\n    validatorAddress,\n    description,\n    commissionRate,\n    minSelfDelegation,\n    maxTotalDelegation,\n    slotKeyToRemove,\n    slotKeyToAdd,\n  }: {\n    validatorAddress: string;\n    description: DescriptionInterface;\n    commissionRate: string;\n    minSelfDelegation: number;\n    maxTotalDelegation: number;\n    slotKeyToRemove: string;\n    slotKeyToAdd: string;\n  }) {\n    this.stakeMsg = new EditValidator(\n      validatorAddress,\n      new Description(\n        description.name,\n        description.identity,\n        description.website,\n        description.securityContact,\n        description.details,\n      ),\n      new Decimal(commissionRate),\n      minSelfDelegation,\n      maxTotalDelegation,\n      slotKeyToRemove,\n      slotKeyToAdd,\n    );\n    this.directive = Directive.DirectiveEditValidator;\n    return this;\n  }\n\n  delegate({\n    delegatorAddress,\n    validatorAddress,\n    amount,\n  }: {\n    delegatorAddress: string;\n    validatorAddress: string;\n    amount: number;\n  }) {\n    this.stakeMsg = new Delegate(delegatorAddress, validatorAddress, amount);\n    this.directive = Directive.DirectiveDelegate;\n    return this;\n  }\n\n  undelegate({\n    delegatorAddress,\n    validatorAddress,\n    amount,\n  }: {\n    delegatorAddress: string;\n    validatorAddress: string;\n    amount: number;\n  }) {\n    this.stakeMsg = new Undelegate(delegatorAddress, validatorAddress, amount);\n    this.directive = Directive.DirectiveUndelegate;\n    return this;\n  }\n\n  collectRewards({ delegatorAddress }: { delegatorAddress: string }) {\n    this.stakeMsg = new CollectRewards(delegatorAddress);\n    this.directive = Directive.DirectiveCollectRewards;\n    return this;\n  }\n\n  setTxParams({\n    nonce,\n    gasPrice,\n    gasLimit,\n    chainId,\n    signature,\n  }: {\n    nonce: number | string;\n    gasPrice: number | string;\n    gasLimit: number | string;\n    chainId: number;\n    signature: Signature;\n  }) {\n    this.nonce = nonce;\n    this.gasPrice = gasPrice;\n    this.gasLimit = gasLimit;\n    this.chainId = chainId;\n    this.signature = signature;\n    return this;\n  }\n\n  build() {\n    if (this.directive === undefined) {\n      throw new Error('cannot build stakingTransaction without Directive');\n    }\n    if (this.stakeMsg === undefined) {\n      throw new Error('cannot build stakingTransaction without stakeMsg');\n    }\n\n    return new StakingTransaction(\n      this.directive,\n      this.stakeMsg,\n      this.nonce !== undefined ? this.nonce : 0,\n      this.gasPrice !== undefined ? this.gasPrice : new Unit('100').asGwei().toHex(),\n      this.gasLimit !== undefined ? this.gasLimit : new Unit('210000').asWei().toHex(),\n      this.chainId !== undefined ? this.chainId : 1,\n      this.messenger,\n      TxStatus.INTIALIZED,\n    );\n  }\n  setMessenger(messenger: Messenger) {\n    this.messenger = messenger;\n  }\n}\n"]}},"error":null,"hash":"7ec6a821c91e3790827809fcbcf22c0f","cacheData":{"env":{}}}