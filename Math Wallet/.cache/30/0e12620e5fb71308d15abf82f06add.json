{"id":"../node_modules/@harmony-js/crypto/dist/keccak256.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/dist/keccak256.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/src/keccak256.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/dist/keccak256.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"js-sha3","loc":{"line":11,"column":40},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/dist/keccak256.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/js-sha3/src/sha3.js"},{"name":"./bytes","loc":{"line":12,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/dist/keccak256.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/crypto/dist/bytes.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n * @ignore\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak256 = void 0;\nvar tslib_1 = require(\"tslib\");\n// this file is ported from 'ether.js' and done some fixes\nvar sha3 = tslib_1.__importStar(require(\"js-sha3\"));\nvar bytes_1 = require(\"./bytes\");\nfunction keccak256(data) {\n    var arrayified = bytes_1.arrayify(data);\n    if (arrayified) {\n        return '0x' + sha3.keccak_256(arrayified);\n    }\n    throw new Error('arrayify failed');\n}\nexports.keccak256 = keccak256;\n// export function sha3_256(data: Arrayish): string {\n//   const arrayified = arrayify(data);\n//   if (arrayified) {\n//     return '0x' + sha3.sha3_256(arrayified);\n//   }\n//   throw new Error('arrayify failed');\n// }\n"},"sourceMaps":{"js":{"version":3,"file":"keccak256.js","sourceRoot":"","sources":["../src/keccak256.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAEH,0DAA0D;AAC1D,oDAAgC;AAEhC,iCAA6C;AAE7C,SAAgB,SAAS,CAAC,IAAc;IACtC,IAAM,UAAU,GAAG,gBAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAI,UAAU,EAAE;QACd,OAAO,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC3C;IACD,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACrC,CAAC;AAND,8BAMC;AAED,qDAAqD;AACrD,uCAAuC;AACvC,sBAAsB;AACtB,+CAA+C;AAC/C,MAAM;AACN,wCAAwC;AACxC,IAAI","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-crypto\n * @ignore\n */\n\n// this file is ported from 'ether.js' and done some fixes\nimport * as sha3 from 'js-sha3';\n\nimport { arrayify, Arrayish } from './bytes';\n\nexport function keccak256(data: Arrayish): string {\n  const arrayified = arrayify(data);\n  if (arrayified) {\n    return '0x' + sha3.keccak_256(arrayified);\n  }\n  throw new Error('arrayify failed');\n}\n\n// export function sha3_256(data: Arrayish): string {\n//   const arrayified = arrayify(data);\n//   if (arrayified) {\n//     return '0x' + sha3.sha3_256(arrayified);\n//   }\n//   throw new Error('arrayify failed');\n// }\n"]}},"error":null,"hash":"9b09ea9f4e5fab79f5cf8d3b0d4f7328","cacheData":{"env":{}}}