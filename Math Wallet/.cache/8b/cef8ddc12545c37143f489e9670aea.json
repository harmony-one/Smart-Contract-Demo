{"id":"../node_modules/@harmony-js/contract/dist/contract.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/src/contract.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/package.json","includedInParent":true,"mtime":1605275414276},{"name":"@harmony-js/account","loc":{"line":9,"column":24},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/account/dist/index.js"},{"name":"./abi/index","loc":{"line":10,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/abi/index.js"},{"name":"./utils/mapper","loc":{"line":11,"column":23},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/utils/mapper.js"},{"name":"./methods/methodFactory","loc":{"line":12,"column":30},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/methods/methodFactory.js"},{"name":"./events/eventFactory","loc":{"line":13,"column":29},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/events/eventFactory.js"},{"name":"./utils/status","loc":{"line":14,"column":23},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/contract.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/utils/status.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nvar account_1 = require(\"@harmony-js/account\");\nvar index_1 = require(\"./abi/index\");\nvar mapper_1 = require(\"./utils/mapper\");\nvar methodFactory_1 = require(\"./methods/methodFactory\");\nvar eventFactory_1 = require(\"./events/eventFactory\");\nvar status_1 = require(\"./utils/status\");\n// class Contract\nvar Contract = /** @class */ (function () {\n    function Contract(abi, address, options, wallet, status) {\n        if (abi === void 0) { abi = []; }\n        if (address === void 0) { address = '0x'; }\n        if (options === void 0) { options = {}; }\n        if (status === void 0) { status = status_1.ContractStatus.INITIALISED; }\n        this.abi = [];\n        this.errorFunc = 'Error(string)';\n        // super();\n        this.abi = abi;\n        this.abiCoder = index_1.AbiCoder();\n        this.abiModel = mapper_1.abiMapper(abi, this.abiCoder);\n        this.options = options;\n        this.address = this.options.address || address;\n        this.shardID = this.options.shardID || wallet.messenger.currentShard;\n        this.wallet = wallet;\n        this.methods = {};\n        this.events = {};\n        this.runMethodFactory();\n        this.runEventFactory();\n        this.status = status;\n        this.errorFuncSig = this.abiCoder.encodeFunctionSignature(this.errorFunc);\n        // tslint:disable-next-line: no-unused-expression\n    }\n    Contract.prototype.isInitialised = function () {\n        return this.status === status_1.ContractStatus.INITIALISED;\n    };\n    Contract.prototype.isSigned = function () {\n        return this.status === status_1.ContractStatus.SIGNED;\n    };\n    Contract.prototype.isSent = function () {\n        return this.status === status_1.ContractStatus.SENT;\n    };\n    Contract.prototype.isDeployed = function () {\n        return this.status === status_1.ContractStatus.DEPLOYED;\n    };\n    Contract.prototype.isRejected = function () {\n        return this.status === status_1.ContractStatus.REJECTED;\n    };\n    Contract.prototype.isCalled = function () {\n        return this.status === status_1.ContractStatus.CALLED;\n    };\n    Contract.prototype.setStatus = function (status) {\n        this.status = status;\n    };\n    Object.defineProperty(Contract.prototype, \"jsonInterface\", {\n        get: function () {\n            return this.abiModel;\n        },\n        set: function (value) {\n            this.abiModel = mapper_1.abiMapper(value, this.abiCoder);\n            this.runMethodFactory();\n            this.runEventFactory();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Contract.prototype, \"address\", {\n        get: function () {\n            return this.options.address || this.address;\n        },\n        set: function (value) {\n            this.options.address = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Contract.prototype, \"data\", {\n        get: function () {\n            return this.options.data;\n        },\n        set: function (value) {\n            this.options.data = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // deploy\n    Contract.prototype.deploy = function (options) {\n        return this.methods.contractConstructor(options);\n    };\n    Contract.prototype.runMethodFactory = function () {\n        return new methodFactory_1.MethodFactory(this).addMethodsToContract();\n    };\n    Contract.prototype.runEventFactory = function () {\n        return new eventFactory_1.EventFactory(this).addEventsToContract();\n    };\n    Contract.prototype.connect = function (wallet) {\n        this.wallet = wallet;\n    };\n    Contract.prototype.setMessegner = function (messenger) {\n        if (this.wallet instanceof account_1.Wallet) {\n            this.wallet.setMessenger(messenger);\n        }\n        else {\n            this.wallet.messenger = messenger;\n        }\n    };\n    return Contract;\n}());\nexports.Contract = Contract;\n"},"sourceMaps":{"js":{"version":3,"file":"contract.js","sourceRoot":"","sources":["../src/contract.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-contract\n *\n */\n\nimport { Wallet } from '@harmony-js/account';\nimport { Messenger } from '@harmony-js/network';\nimport { Transaction } from '@harmony-js/transaction';\nimport { AbiCoder } from './abi/index';\nimport { abiMapper } from './utils/mapper';\nimport { ContractOptions } from './utils/options';\nimport { AbiModel } from './models/types';\nimport { AbiCoderClass } from './abi/api';\nimport { MethodFactory } from './methods/methodFactory';\nimport { EventFactory } from './events/eventFactory';\nimport { ContractStatus } from './utils/status';\n\n// class Contract\nexport class Contract {\n  methods: any;\n  events: any;\n  abi: any = [];\n  abiModel: any | AbiModel;\n  abiCoder: AbiCoderClass;\n  options: ContractOptions | any;\n  wallet: Wallet | any;\n  transaction?: Transaction;\n  status: ContractStatus;\n  shardID: number;\n  errorFunc: string = 'Error(string)';\n  errorFuncSig: string;\n\n  constructor(\n    abi: any = [],\n    address: string = '0x',\n    options: ContractOptions = {},\n    wallet: Wallet,\n    status: ContractStatus = ContractStatus.INITIALISED,\n  ) {\n    // super();\n    this.abi = abi;\n    this.abiCoder = AbiCoder();\n    this.abiModel = abiMapper(abi, this.abiCoder);\n    this.options = options;\n    this.address = this.options.address || address;\n    this.shardID = this.options.shardID || wallet.messenger.currentShard;\n    this.wallet = wallet;\n    this.methods = {};\n    this.events = {};\n    this.runMethodFactory();\n    this.runEventFactory();\n    this.status = status;\n    this.errorFuncSig = this.abiCoder.encodeFunctionSignature(this.errorFunc);\n    // tslint:disable-next-line: no-unused-expression\n  }\n  isInitialised() {\n    return this.status === ContractStatus.INITIALISED;\n  }\n  isSigned() {\n    return this.status === ContractStatus.SIGNED;\n  }\n  isSent() {\n    return this.status === ContractStatus.SENT;\n  }\n  isDeployed() {\n    return this.status === ContractStatus.DEPLOYED;\n  }\n  isRejected() {\n    return this.status === ContractStatus.REJECTED;\n  }\n  isCalled() {\n    return this.status === ContractStatus.CALLED;\n  }\n  setStatus(status: ContractStatus) {\n    this.status = status;\n  }\n\n  get jsonInterface(): any[] {\n    return this.abiModel;\n  }\n\n  set jsonInterface(value: any[]) {\n    this.abiModel = abiMapper(value, this.abiCoder);\n    this.runMethodFactory();\n    this.runEventFactory();\n  }\n\n  get address() {\n    return this.options.address || this.address;\n  }\n\n  set address(value: string) {\n    this.options.address = value;\n  }\n\n  get data() {\n    return this.options.data;\n  }\n\n  set data(value) {\n    this.options.data = value;\n  }\n\n  // deploy\n  deploy(options: any) {\n    return this.methods.contractConstructor(options);\n  }\n\n  runMethodFactory(): Contract {\n    return new MethodFactory(this).addMethodsToContract();\n  }\n  runEventFactory(): Contract {\n    return new EventFactory(this).addEventsToContract();\n  }\n  connect(wallet: Wallet): void {\n    this.wallet = wallet;\n  }\n  setMessegner(messenger: Messenger) {\n    if (this.wallet instanceof Wallet) {\n      this.wallet.setMessenger(messenger);\n    } else {\n      this.wallet.messenger = messenger;\n    }\n  }\n}\n"]}},"error":null,"hash":"7077d8142813280c54754020fb245ac0","cacheData":{"env":{}}}