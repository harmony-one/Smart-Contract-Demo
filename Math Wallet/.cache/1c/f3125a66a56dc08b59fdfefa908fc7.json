{"id":"../node_modules/@harmony-js/utils/dist/validators.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/utils/dist/validators.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/utils/src/validators.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/utils/package.json","includedInParent":true,"mtime":1605232158218}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-utils\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidAddress = exports.isBech32TestNetAddress = exports.isBech32Address = exports.isBlockNumber = exports.DefaultBlockParams = exports.isWs = exports.isHttp = exports.isHex = exports.isFunction = exports.isObject = exports.isJsonString = exports.isArray = exports.isBoolean = exports.isString = exports.isInt = exports.isNumber = exports.isHash = exports.isPublicKey = exports.isPrivateKey = exports.isAddress = exports.isKeyString = void 0;\nexports.isKeyString = function (keyString, lengh) {\n    return !!keyString.replace('0x', '').match(\"^[0-9a-fA-F]{\" + lengh + \"}$\");\n};\nexports.isKeyString.validator = 'isKeyString';\nexports.isAddress = function (address) {\n    return exports.isKeyString(address, 40);\n};\nexports.isAddress.validator = 'isAddress';\nexports.isPrivateKey = function (privateKey) {\n    return exports.isKeyString(privateKey, 64);\n};\nexports.isPrivateKey.validator = 'isPrivateKey';\nexports.isPublicKey = function (publicKey) {\n    return exports.isKeyString(publicKey, 66);\n};\nexports.isPublicKey.validator = 'isPublicKey';\nexports.isHash = function (hash) {\n    return exports.isKeyString(hash, 64);\n};\nexports.isHash.validator = 'isHash';\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isNumber = function (obj) {\n    return obj === +obj;\n};\nexports.isNumber.validator = 'isNumber';\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {boolean}     [boolean]\n */\nexports.isInt = function (obj) {\n    return exports.isNumber(obj) && Number.isInteger(obj);\n};\nexports.isInt.validator = 'isInt';\n/**\n * [isString verify param is a String]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isString = function (obj) {\n    return obj === \"\" + obj;\n};\nexports.isString.validator = 'isString';\n/**\n * [isBoolean verify param is a Boolean]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isBoolean = function (obj) {\n    return obj === !!obj;\n};\nexports.isBoolean.validator = 'isBoolean';\n/**\n * [isArray verify param input is an Array]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isArray = function (obj) {\n    return Array.isArray(obj);\n};\nexports.isArray.validator = 'isArray';\n/**\n * [isJson verify param input is a Json]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isJsonString = function (obj) {\n    try {\n        return !!JSON.parse(obj) && exports.isObject(JSON.parse(obj));\n    }\n    catch (e) {\n        return false;\n    }\n};\nexports.isJsonString.validator = 'isJsonString';\n/**\n * [isObject verify param is an Object]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexports.isObject = function (obj) {\n    return obj !== null && !Array.isArray(obj) && typeof obj === 'object';\n};\nexports.isObject.validator = 'isObject';\n/**\n * [isFunction verify param is a Function]\n * @param  {any}  obj [value]\n * @return {Boolean}     [description]\n */\nexports.isFunction = function (obj) {\n    return typeof obj === 'function';\n};\nexports.isFunction.validator = 'isFunction';\nexports.isHex = function (obj) {\n    if (!exports.isString(obj)) {\n        throw new Error(obj + \" is not string\");\n    }\n    return ((obj.startsWith('0x') || obj.startsWith('-0x')) &&\n        exports.isNumber(Number.parseInt((\"\" + obj).toLowerCase().replace('0x', ''), 16)));\n};\nexports.isHex.validator = 'isHex';\nexports.isHttp = function (obj) {\n    if (!exports.isString(obj)) {\n        throw new Error(obj + \" is not valid url\");\n    }\n    else {\n        return obj.startsWith('http://') || obj.startsWith('https://');\n    }\n};\nexports.isHttp.validator = 'isHttp';\nexports.isWs = function (obj) {\n    if (!exports.isString(obj)) {\n        throw new Error(obj + \" is not valid url\");\n    }\n    else {\n        return obj.startsWith('ws://') || obj.startsWith('wss://');\n    }\n};\nexports.isWs.validator = 'isWs';\nvar DefaultBlockParams;\n(function (DefaultBlockParams) {\n    DefaultBlockParams[\"earliest\"] = \"earliest\";\n    DefaultBlockParams[\"pending\"] = \"pending\";\n    DefaultBlockParams[\"latest\"] = \"latest\";\n})(DefaultBlockParams = exports.DefaultBlockParams || (exports.DefaultBlockParams = {}));\nexports.isBlockNumber = function (obj) {\n    var blockParams = [\n        DefaultBlockParams.earliest,\n        DefaultBlockParams.pending,\n        DefaultBlockParams.latest,\n    ];\n    if (!exports.isString(obj)) {\n        throw new Error(obj + \" is not valid blockNumber\");\n    }\n    return exports.isHex(obj) || blockParams.some(function (val) { return val === obj; });\n};\nexports.isBlockNumber.validator = 'isBlockNumber';\nexports.isBech32Address = function (raw) {\n    return !!raw.match(/^one1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nexports.isBech32Address.validator = 'isBech32Address';\nexports.isBech32TestNetAddress = function (raw) {\n    return !!raw.match(/^tone1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nexports.isBech32TestNetAddress.validator = 'isBech32TestNetAddress';\nexports.isValidAddress = function (address) {\n    if (!exports.isString(address)) {\n        throw new Error(address + \" is not string\");\n    }\n    if (exports.isAddress(address) || exports.isBech32Address(address) || exports.isBech32TestNetAddress(address)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nexports.isValidAddress.validator = 'isValidAddress';\n"},"sourceMaps":{"js":{"version":3,"file":"validators.js","sourceRoot":"","sources":["../src/validators.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-utils\n */\n\nexport const isKeyString = (keyString: string, lengh: number): boolean => {\n  return !!keyString.replace('0x', '').match(`^[0-9a-fA-F]{${lengh}}$`);\n};\nisKeyString.validator = 'isKeyString';\n\nexport const isAddress = (address: string): boolean => {\n  return isKeyString(address, 40);\n};\nisAddress.validator = 'isAddress';\n\nexport const isPrivateKey = (privateKey: string): boolean => {\n  return isKeyString(privateKey, 64);\n};\nisPrivateKey.validator = 'isPrivateKey';\n\nexport const isPublicKey = (publicKey: string): boolean => {\n  return isKeyString(publicKey, 66);\n};\nisPublicKey.validator = 'isPublicKey';\n\nexport const isHash = (hash: string): boolean => {\n  return isKeyString(hash, 64);\n};\nisHash.validator = 'isHash';\n\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isNumber = (obj: any): boolean => {\n  return obj === +obj;\n};\nisNumber.validator = 'isNumber';\n\n/**\n * [isNumber verify param is a Number]\n * @param  {any}  obj [value]\n * @return {boolean}     [boolean]\n */\nexport const isInt = (obj: any): boolean => {\n  return isNumber(obj) && Number.isInteger(obj);\n};\n\nisInt.validator = 'isInt';\n\n/**\n * [isString verify param is a String]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isString = (obj: any): boolean => {\n  return obj === `${obj}`;\n};\n\nisString.validator = 'isString';\n/**\n * [isBoolean verify param is a Boolean]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isBoolean = (obj: any): boolean => {\n  return obj === !!obj;\n};\n\nisBoolean.validator = 'isBoolean';\n/**\n * [isArray verify param input is an Array]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isArray = (obj: any): boolean => {\n  return Array.isArray(obj);\n};\n\nisArray.validator = 'isArray';\n/**\n * [isJson verify param input is a Json]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isJsonString = (obj: any): boolean => {\n  try {\n    return !!JSON.parse(obj) && isObject(JSON.parse(obj));\n  } catch (e) {\n    return false;\n  }\n};\nisJsonString.validator = 'isJsonString';\n\n/**\n * [isObject verify param is an Object]\n * @param  {any}  obj [value]\n * @return {Boolean}     [boolean]\n */\nexport const isObject = (obj: any): boolean => {\n  return obj !== null && !Array.isArray(obj) && typeof obj === 'object';\n};\nisObject.validator = 'isObject';\n\n/**\n * [isFunction verify param is a Function]\n * @param  {any}  obj [value]\n * @return {Boolean}     [description]\n */\n\nexport const isFunction = (obj: any): boolean => {\n  return typeof obj === 'function';\n};\nisFunction.validator = 'isFunction';\n\nexport const isHex = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not string`);\n  }\n  return (\n    (obj.startsWith('0x') || obj.startsWith('-0x')) &&\n    isNumber(Number.parseInt(`${obj}`.toLowerCase().replace('0x', ''), 16))\n  );\n};\n\nisHex.validator = 'isHex';\n\nexport const isHttp = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid url`);\n  } else {\n    return obj.startsWith('http://') || obj.startsWith('https://');\n  }\n};\nisHttp.validator = 'isHttp';\n\nexport const isWs = (obj: any): boolean => {\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid url`);\n  } else {\n    return obj.startsWith('ws://') || obj.startsWith('wss://');\n  }\n};\nisWs.validator = 'isWs';\n\nexport enum DefaultBlockParams {\n  earliest = 'earliest',\n  pending = 'pending',\n  latest = 'latest',\n}\n\nexport const isBlockNumber = (obj: any): boolean => {\n  const blockParams = [\n    DefaultBlockParams.earliest,\n    DefaultBlockParams.pending,\n    DefaultBlockParams.latest,\n  ];\n\n  if (!isString(obj)) {\n    throw new Error(`${obj} is not valid blockNumber`);\n  }\n\n  return isHex(obj) || blockParams.some((val) => val === obj);\n};\nisBlockNumber.validator = 'isBlockNumber';\n\nexport const isBech32Address = (raw: string): boolean => {\n  return !!raw.match(/^one1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nisBech32Address.validator = 'isBech32Address';\n\nexport const isBech32TestNetAddress = (raw: string): boolean => {\n  return !!raw.match(/^tone1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}/);\n};\nisBech32TestNetAddress.validator = 'isBech32TestNetAddress';\n\nexport const isValidAddress = (address: string): boolean => {\n  if (!isString(address)) {\n    throw new Error(`${address} is not string`);\n  }\n  if (isAddress(address) || isBech32Address(address) || isBech32TestNetAddress(address)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nisValidAddress.validator = 'isValidAddress';\n"]}},"error":null,"hash":"0af525dad790db5e972788c36f5be3f7","cacheData":{"env":{}}}