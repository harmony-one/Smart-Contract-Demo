{"id":"../node_modules/@harmony-js/contract/dist/utils/decoder.js","dependencies":[{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/contract/dist/utils/decoder.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/contract/src/utils/decoder.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/contract/package.json","includedInParent":true,"mtime":1605275414276}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = void 0;\nexports.decode = function (abiCoder, abiItemModel, response) {\n    var argumentTopics = response.topics;\n    if (!abiItemModel.anonymous) {\n        argumentTopics = response.topics.slice(1);\n    }\n    if (response.data === '0x') {\n        response.data = null;\n    }\n    response.returnValues = abiCoder.decodeLog(abiItemModel.getInputs(), response.data, argumentTopics);\n    response.event = abiItemModel.name;\n    response.signature = abiItemModel.signature;\n    response.raw = {\n        data: response.data,\n        topics: response.topics,\n    };\n    if (abiItemModel.anonymous || !response.topics[0]) {\n        response.signature = null;\n    }\n    delete response.data;\n    delete response.topics;\n    return response;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"decoder.js","sourceRoot":"","sources":["../../src/utils/decoder.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAKU,QAAA,MAAM,GAAG,UAAC,QAAuB,EAAE,YAA0B,EAAE,QAAa;IACvF,IAAI,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;IAErC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;QAC3B,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3C;IAED,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;QAC1B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;KACtB;IAED,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,SAAS,CACxC,YAAY,CAAC,SAAS,EAAE,EACxB,QAAQ,CAAC,IAAI,EACb,cAAc,CACf,CAAC;IACF,QAAQ,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC;IACnC,QAAQ,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;IAC5C,QAAQ,CAAC,GAAG,GAAG;QACb,IAAI,EAAE,QAAQ,CAAC,IAAI;QACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;KACxB,CAAC;IAEF,IAAI,YAAY,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;QACjD,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;KAC3B;IAED,OAAO,QAAQ,CAAC,IAAI,CAAC;IACrB,OAAO,QAAQ,CAAC,MAAM,CAAC;IAEvB,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\n\nimport { AbiItemModel } from '../models/types';\nimport { AbiCoderClass } from '../abi/api';\n\nexport const decode = (abiCoder: AbiCoderClass, abiItemModel: AbiItemModel, response: any) => {\n  let argumentTopics = response.topics;\n\n  if (!abiItemModel.anonymous) {\n    argumentTopics = response.topics.slice(1);\n  }\n\n  if (response.data === '0x') {\n    response.data = null;\n  }\n\n  response.returnValues = abiCoder.decodeLog(\n    abiItemModel.getInputs(),\n    response.data,\n    argumentTopics,\n  );\n  response.event = abiItemModel.name;\n  response.signature = abiItemModel.signature;\n  response.raw = {\n    data: response.data,\n    topics: response.topics,\n  };\n\n  if (abiItemModel.anonymous || !response.topics[0]) {\n    response.signature = null;\n  }\n\n  delete response.data;\n  delete response.topics;\n\n  return response;\n};\n"]}},"error":null,"hash":"0e3c12637ffc50897129cbb2f21a8fd6","cacheData":{"env":{}}}