{"id":"../node_modules/@harmony-js/network/dist/subscriptions/Subscription.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/Subscription.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/src/subscriptions/Subscription.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":8,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/Subscription.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"../rpcMethod/rpc","loc":{"line":9,"column":20},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/Subscription.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/rpcMethod/rpc.js"},{"name":"../providers/ws","loc":{"line":10,"column":19},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/Subscription.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/providers/ws.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionMethod = void 0;\nvar tslib_1 = require(\"tslib\");\nvar rpc_1 = require(\"../rpcMethod/rpc\");\nvar ws_1 = require(\"../providers/ws\");\nvar SubscriptionMethod = /** @class */ (function (_super) {\n    tslib_1.__extends(SubscriptionMethod, _super);\n    function SubscriptionMethod(param, options, messenger, shardID) {\n        if (shardID === void 0) { shardID = 0; }\n        var _this = _super.call(this, shardID !== 0 ? messenger.getShardProvider(shardID).url : messenger.provider.url) || this;\n        _this.subscriptionId = null;\n        _this.shardID = shardID;\n        _this.param = param;\n        _this.options = options;\n        _this.messenger = messenger;\n        return _this;\n    }\n    SubscriptionMethod.prototype.constructPayload = function (method, param, options) {\n        var rpcMethod = method;\n        var payload = [];\n        payload.push(param);\n        if (options) {\n            payload.push(options);\n        }\n        rpcMethod = this.messenger.setRPCPrefix(method, this.messenger.chainPrefix);\n        return this.jsonRpc.toPayload(rpcMethod, payload);\n    };\n    SubscriptionMethod.prototype.start = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var subscribePayload, id_1, error_1;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        subscribePayload = this.constructPayload(rpc_1.RPCMethod.Subscribe, this.param, this.options);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, _super.prototype.subscribe.call(this, subscribePayload)];\n                    case 2:\n                        id_1 = _a.sent();\n                        this.subscriptionId = id_1;\n                        this.on(id_1, function (result) {\n                            var output = _this.onNewSubscriptionItem(result);\n                            _this.emitter.emit('data', output);\n                        });\n                        this.once('error', function (error) {\n                            _this.removeEventListener(id_1);\n                            _this.emitter.emit('error', error);\n                            _this.removeEventListener('*');\n                        });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        this.emitter.emit('error', error_1);\n                        this.removeEventListener('*');\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    SubscriptionMethod.prototype.unsubscribe = function () {\n        var unsubscribePayload = this.constructPayload(rpc_1.RPCMethod.UnSubscribe, this.subscriptionId);\n        return _super.prototype.unsubscribe.call(this, unsubscribePayload);\n    };\n    SubscriptionMethod.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n        return subscriptionItem;\n    };\n    return SubscriptionMethod;\n}(ws_1.WSProvider));\nexports.SubscriptionMethod = SubscriptionMethod;\n"},"sourceMaps":{"js":{"version":3,"file":"Subscription.js","sourceRoot":"","sources":["../../src/subscriptions/Subscription.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;AAGH,wCAA6C;AAC7C,sCAA6C;AAG7C;IAAwC,8CAAU;IAOhD,4BAAY,KAAU,EAAE,OAAY,EAAE,SAAoB,EAAE,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QAA/E,YACE,kBAAM,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,SAKxF;QAPD,oBAAc,GAAQ,IAAI,CAAC;QAGzB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAC7B,CAAC;IAED,6CAAgB,GAAhB,UAAiB,MAAc,EAAE,KAAU,EAAE,OAAa;QACxD,IAAI,SAAS,GAAG,MAAM,CAAC;QACvB,IAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpB,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvB;QACD,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5E,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAEK,kCAAK,GAAX;;;;;;;wBACQ,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAS,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;;;wBAEjF,qBAAM,iBAAM,SAAS,YAAC,gBAAgB,CAAC,EAAA;;wBAA5C,OAAK,SAAuC;wBAClD,IAAI,CAAC,cAAc,GAAG,IAAE,CAAC;wBACzB,IAAI,CAAC,EAAE,CAAC,IAAE,EAAE,UAAC,MAAW;4BACtB,IAAM,MAAM,GAAG,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;4BAElD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBACpC,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,KAAK;4BACvB,KAAI,CAAC,mBAAmB,CAAC,IAAE,CAAC,CAAC;4BAC7B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;4BAClC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;wBAChC,CAAC,CAAC,CAAC;;;;wBAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAK,CAAC,CAAC;wBAClC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;;4BAEhC,sBAAO,IAAI,EAAC;;;;KACb;IACD,wCAAW,GAAX;QACE,IAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAS,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7F,OAAO,iBAAM,WAAW,YAAC,kBAAkB,CAAC,CAAC;IAC/C,CAAC;IACD,kDAAqB,GAArB,UAAsB,gBAAqB;QACzC,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IACH,yBAAC;AAAD,CAAC,AAtDD,CAAwC,eAAU,GAsDjD;AAtDY,gDAAkB","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { RPCMethod } from '../rpcMethod/rpc';\nimport { WSProvider } from '../providers/ws';\nimport { RPCRequestPayload } from '../types';\n\nexport class SubscriptionMethod extends WSProvider {\n  param: any;\n  options: any;\n  shardID: number;\n  messenger: Messenger;\n\n  subscriptionId: any = null;\n  constructor(param: any, options: any, messenger: Messenger, shardID: number = 0) {\n    super(shardID !== 0 ? messenger.getShardProvider(shardID).url : messenger.provider.url);\n    this.shardID = shardID;\n    this.param = param;\n    this.options = options;\n    this.messenger = messenger;\n  }\n\n  constructPayload(method: string, param: any, options?: any): RPCRequestPayload<any> {\n    let rpcMethod = method;\n    const payload: any = [];\n    payload.push(param);\n    if (options) {\n      payload.push(options);\n    }\n    rpcMethod = this.messenger.setRPCPrefix(method, this.messenger.chainPrefix);\n    return this.jsonRpc.toPayload(rpcMethod, payload);\n  }\n\n  async start() {\n    const subscribePayload = this.constructPayload(RPCMethod.Subscribe, this.param, this.options);\n    try {\n      const id = await super.subscribe(subscribePayload);\n      this.subscriptionId = id;\n      this.on(id, (result: any) => {\n        const output = this.onNewSubscriptionItem(result);\n\n        this.emitter.emit('data', output);\n      });\n      this.once('error', (error) => {\n        this.removeEventListener(id);\n        this.emitter.emit('error', error);\n        this.removeEventListener('*');\n      });\n    } catch (error) {\n      this.emitter.emit('error', error);\n      this.removeEventListener('*');\n    }\n    return this;\n  }\n  unsubscribe() {\n    const unsubscribePayload = this.constructPayload(RPCMethod.UnSubscribe, this.subscriptionId);\n    return super.unsubscribe(unsubscribePayload);\n  }\n  onNewSubscriptionItem(subscriptionItem: any) {\n    return subscriptionItem;\n  }\n}\n"]}},"error":null,"hash":"8b27112e862e551ee3ce5f2f17f52763","cacheData":{"env":{}}}