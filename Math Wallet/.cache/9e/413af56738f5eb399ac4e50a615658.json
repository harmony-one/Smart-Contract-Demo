{"id":"../node_modules/@harmony-js/transaction/dist/abstractTransaction.js","dependencies":[{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/transaction/dist/abstractTransaction.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/transaction/src/abstractTransaction.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web/node_modules/@harmony-js/transaction/package.json","includedInParent":true,"mtime":1605232158322}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractTransaction = void 0;\nvar AbstractTransaction = /** @class */ (function () {\n    function AbstractTransaction() {\n    }\n    return AbstractTransaction;\n}());\nexports.AbstractTransaction = AbstractTransaction;\n"},"sourceMaps":{"js":{"version":3,"file":"abstractTransaction.js","sourceRoot":"","sources":["../src/abstractTransaction.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAKH;IAAA;IAuBA,CAAC;IAAD,0BAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBqB,kDAAmB","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { Messenger } from '@harmony-js/network';\nimport { TxStatus } from './types';\n\nexport abstract class AbstractTransaction {\n  abstract setMessenger(messenger: Messenger): void;\n  abstract setTxStatus(txStatus: TxStatus): void;\n  abstract getTxStatus(): TxStatus;\n  abstract isInitialized(): boolean;\n  abstract isSigned(): boolean;\n  abstract isPending(): boolean;\n  abstract isRejected(): boolean;\n  abstract isConfirmed(): boolean;\n  abstract async trackTx(txHash: string, shardID: number | string): Promise<boolean>;\n  abstract async txConfirm(\n    txHash: string,\n    maxAttempts: number | undefined,\n    interval: number | undefined,\n    shardID: string | number,\n  ): Promise<any>;\n  abstract async socketConfirm(\n    txHash: string,\n    maxAttempts: number,\n    shardID: number | string,\n  ): Promise<any>;\n  abstract async getBlockNumber(shardID: number | string): Promise<any>;\n  abstract async getBlockByNumber(blockNumber: string): Promise<any>;\n}\n"]}},"error":null,"hash":"d75251965cc6e9c8139b5b7018253ba2","cacheData":{"env":{}}}