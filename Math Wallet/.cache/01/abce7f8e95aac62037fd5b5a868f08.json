{"id":"../node_modules/@harmony-js/contract/dist/methods/methodFactory.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/methods/methodFactory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/src/methods/methodFactory.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/package.json","includedInParent":true,"mtime":1605275414276},{"name":"./method","loc":{"line":9,"column":23},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/methods/methodFactory.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/contract/dist/methods/method.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MethodFactory = void 0;\nvar method_1 = require(\"./method\");\nvar MethodFactory = /** @class */ (function () {\n    // constructor\n    function MethodFactory(contract) {\n        this.contract = contract;\n        this.abiModel = this.contract.abiModel;\n        this.abiCoder = this.contract.abiCoder;\n        this.methodKeys = this.mapMethodKeys();\n    }\n    MethodFactory.prototype.addMethodsToContract = function () {\n        var _this = this;\n        this.methodKeys.forEach(function (key) {\n            var newObject = {};\n            newObject[key] = function () {\n                var params = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    params[_i] = arguments[_i];\n                }\n                return new method_1.ContractMethod(key, params, _this.abiModel.getMethod(key), _this.contract);\n            };\n            Object.assign(_this.contract.methods, newObject);\n        });\n        return this.contract;\n    };\n    /**\n     * @function mapMethodKeys\n     * @return {string[]} {description}\n     */\n    MethodFactory.prototype.mapMethodKeys = function () {\n        return Object.keys(this.abiModel.abi.methods);\n    };\n    return MethodFactory;\n}());\nexports.MethodFactory = MethodFactory;\n"},"sourceMaps":{"js":{"version":3,"file":"methodFactory.js","sourceRoot":"","sources":["../../src/methods/methodFactory.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;AAKH,mCAA0C;AAE1C;IAME,cAAc;IACd,uBAAY,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACzC,CAAC;IAED,4CAAoB,GAApB;QAAA,iBASC;QARC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,GAAW;YAClC,IAAM,SAAS,GAAQ,EAAE,CAAC;YAC1B,SAAS,CAAC,GAAG,CAAC,GAAG;gBAAC,gBAAgB;qBAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;oBAAhB,2BAAgB;;gBAChC,OAAA,IAAI,uBAAc,CAAC,GAAG,EAAE,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC;YAA5E,CAA4E,CAAC;YAE/E,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD;;;OAGG;IACK,qCAAa,GAArB;QACE,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IACH,oBAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,sCAAa","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-contract\n * @hidden\n */\n\nimport { AbiCoderClass } from '../abi/api';\nimport { AbiModel } from '../models/types';\nimport { Contract } from '../contract';\nimport { ContractMethod } from './method';\n\nexport class MethodFactory {\n  contract: Contract;\n  abiModel: any | AbiModel;\n  abiCoder: AbiCoderClass;\n  private methodKeys: string[];\n\n  // constructor\n  constructor(contract: Contract) {\n    this.contract = contract;\n    this.abiModel = this.contract.abiModel;\n    this.abiCoder = this.contract.abiCoder;\n    this.methodKeys = this.mapMethodKeys();\n  }\n\n  addMethodsToContract() {\n    this.methodKeys.forEach((key: string) => {\n      const newObject: any = {};\n      newObject[key] = (...params: any[]) =>\n        new ContractMethod(key, params, this.abiModel.getMethod(key), this.contract);\n\n      Object.assign(this.contract.methods, newObject);\n    });\n    return this.contract;\n  }\n  /**\n   * @function mapMethodKeys\n   * @return {string[]} {description}\n   */\n  private mapMethodKeys(): string[] {\n    return Object.keys(this.abiModel.abi.methods);\n  }\n}\n"]}},"error":null,"hash":"e70f23357a5be65277229cd56764e8b1","cacheData":{"env":{}}}