{"id":"../node_modules/@harmony-js/network/dist/subscriptions/LogSub.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/LogSub.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/src/subscriptions/LogSub.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":8,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/LogSub.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"./Subscription","loc":{"line":9,"column":29},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/LogSub.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/Subscription.js"},{"name":"../rpcMethod/rpc","loc":{"line":10,"column":20},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/subscriptions/LogSub.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/rpcMethod/rpc.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogSub = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rpc_1 = require(\"../rpcMethod/rpc\");\nvar LogSub = /** @class */ (function (_super) {\n    tslib_1.__extends(LogSub, _super);\n    function LogSub(options, messenger, shardID) {\n        if (shardID === void 0) { shardID = 0; }\n        var _this = _super.call(this, 'logs', options, messenger, shardID) || this;\n        _this.preprocess();\n        return _this;\n    }\n    LogSub.prototype.preprocess = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var getPastLogs, logs, error_1;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!((this.options.fromBlock && this.options.fromBlock !== 'latest') ||\n                            this.options.fromBlock === 0 ||\n                            this.options.fromBlock === '0x')) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.messenger.send(rpc_1.RPCMethod.GetPastLogs, tslib_1.__spread(this.options), this.messenger.chainType, this.shardID)];\n                    case 2:\n                        getPastLogs = _a.sent();\n                        if (getPastLogs.isError()) {\n                            this.emitter.emit('error', getPastLogs.error.message);\n                        }\n                        else {\n                            logs = getPastLogs.result;\n                            logs.forEach(function (log) {\n                                var formattedLog = _this.onNewSubscriptionItem(log);\n                                _this.emitter.emit('data', formattedLog);\n                            });\n                        }\n                        delete this.options.fromBlock;\n                        // const sub = this.start();\n                        return [2 /*return*/, this.start()];\n                    case 3:\n                        error_1 = _a.sent();\n                        this.emitter.emit('error', error_1);\n                        throw error_1;\n                    case 4: return [2 /*return*/, this.start()];\n                }\n            });\n        });\n    };\n    LogSub.prototype.onNewSubscriptionItem = function (subscriptionItem) {\n        // todo log formatter\n        var log = subscriptionItem;\n        if (log.removed) {\n            this.emitter.emit('changed', log);\n        }\n        return log;\n    };\n    return LogSub;\n}(Subscription_1.SubscriptionMethod));\nexports.LogSub = LogSub;\n"},"sourceMaps":{"js":{"version":3,"file":"LogSub.js","sourceRoot":"","sources":["../../src/subscriptions/LogSub.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;AAGH,+CAAoD;AACpD,wCAA6C;AAE7C;IAA4B,kCAAkB;IAC5C,gBAAY,OAAY,EAAE,SAAoB,EAAE,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QAAnE,YACE,kBAAM,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,SAE3C;QADC,KAAI,CAAC,UAAU,EAAE,CAAC;;IACpB,CAAC;IAEK,2BAAU,GAAhB;;;;;;;6BAEI,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,QAAQ,CAAC;4BAC/D,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,CAAC;4BAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,CAAA,EAF/B,wBAE+B;;;;wBAGT,qBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAC3C,eAAS,CAAC,WAAW,mBACjB,IAAI,CAAC,OAAO,GAChB,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,OAAO,CACb,EAAA;;wBALK,WAAW,GAAG,SAKnB;wBAED,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE;4BACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;yBACvD;6BAAM;4BACC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC;4BAChC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAQ;gCACpB,IAAM,YAAY,GAAG,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;gCACrD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;4BAC1C,CAAC,CAAC,CAAC;yBACJ;wBACD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;wBAC9B,4BAA4B;wBAC5B,sBAAO,IAAI,CAAC,KAAK,EAAE,EAAC;;;wBAEpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,OAAK,CAAC,CAAC;wBAClC,MAAM,OAAK,CAAC;4BAGhB,sBAAO,IAAI,CAAC,KAAK,EAAE,EAAC;;;;KACrB;IAED,sCAAqB,GAArB,UAAsB,gBAAqB;QACzC,qBAAqB;QACrB,IAAM,GAAG,GAAG,gBAAgB,CAAC;QAE7B,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SACnC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAEH,aAAC;AAAD,CAAC,AAnDD,CAA4B,iCAAkB,GAmD7C;AAnDY,wBAAM","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { SubscriptionMethod } from './Subscription';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nexport class LogSub extends SubscriptionMethod {\n  constructor(options: any, messenger: Messenger, shardID: number = 0) {\n    super('logs', options, messenger, shardID);\n    this.preprocess();\n  }\n\n  async preprocess() {\n    if (\n      (this.options.fromBlock && this.options.fromBlock !== 'latest') ||\n      this.options.fromBlock === 0 ||\n      this.options.fromBlock === '0x'\n    ) {\n      try {\n        const getPastLogs = await this.messenger.send(\n          RPCMethod.GetPastLogs,\n          [...this.options],\n          this.messenger.chainType,\n          this.shardID,\n        );\n\n        if (getPastLogs.isError()) {\n          this.emitter.emit('error', getPastLogs.error.message);\n        } else {\n          const logs = getPastLogs.result;\n          logs.forEach((log: any) => {\n            const formattedLog = this.onNewSubscriptionItem(log);\n            this.emitter.emit('data', formattedLog);\n          });\n        }\n        delete this.options.fromBlock;\n        // const sub = this.start();\n        return this.start();\n      } catch (error) {\n        this.emitter.emit('error', error);\n        throw error;\n      }\n    }\n    return this.start();\n  }\n\n  onNewSubscriptionItem(subscriptionItem: any) {\n    // todo log formatter\n    const log = subscriptionItem;\n\n    if (log.removed) {\n      this.emitter.emit('changed', log);\n    }\n\n    return log;\n  }\n  // todo formatter\n}\n"]}},"error":null,"hash":"82b4275788d2e63afb36b5b5a782a58f","cacheData":{"env":{}}}