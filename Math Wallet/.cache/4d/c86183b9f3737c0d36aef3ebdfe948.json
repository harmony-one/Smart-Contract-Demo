{"id":"../node_modules/@harmony-js/transaction/dist/shardingTransaction.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/src/shardingTransaction.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"@harmony-js/utils","loc":{"line":10,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/utils/dist/index.js"},{"name":"./transaction","loc":{"line":11,"column":28},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/transaction.js"},{"name":"./types","loc":{"line":12,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/types.js"},{"name":"./utils","loc":{"line":13,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/shardingTransaction.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/transaction/dist/utils.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShardingTransaction = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"@harmony-js/utils\");\nvar transaction_1 = require(\"./transaction\");\nvar types_1 = require(\"./types\");\nvar utils_2 = require(\"./utils\");\nvar ShardingTransaction = /** @class */ (function (_super) {\n    tslib_1.__extends(ShardingTransaction, _super);\n    function ShardingTransaction(params, messenger, txStatus) {\n        if (messenger === void 0) { messenger = utils_2.defaultMessenger; }\n        if (txStatus === void 0) { txStatus = types_1.TxStatus.INTIALIZED; }\n        var _this = this;\n        var fromAddress = params.from;\n        var toAddress = params.to;\n        var fromExtraction = fromAddress !== undefined ? fromAddress.split(utils_1.AddressSuffix) : ['0x', undefined];\n        var toExtraction = toAddress !== undefined ? toAddress.split(utils_1.AddressSuffix) : ['0x', undefined];\n        var from = fromExtraction[0];\n        var shardID = fromExtraction[1] !== undefined\n            ? Number.parseInt(fromExtraction[1], 10)\n            : params.shardID !== undefined\n                ? params.shardID\n                : 0;\n        var to = toExtraction[0];\n        var toShardID = toExtraction[1] !== undefined\n            ? Number.parseInt(toExtraction[1], 10)\n            : params.toShardID !== undefined\n                ? params.toShardID\n                : 0;\n        var reParams = tslib_1.__assign(tslib_1.__assign({}, params), { from: from,\n            to: to,\n            shardID: shardID,\n            toShardID: toShardID });\n        _this = _super.call(this, reParams, messenger, txStatus) || this;\n        return _this;\n    }\n    return ShardingTransaction;\n}(transaction_1.Transaction));\nexports.ShardingTransaction = ShardingTransaction;\n"},"sourceMaps":{"js":{"version":3,"file":"shardingTransaction.js","sourceRoot":"","sources":["../src/shardingTransaction.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAGH,2CAAkD;AAClD,6CAA4C;AAC5C,iCAA6C;AAC7C,iCAA2C;AAE3C;IAAyC,+CAAW;IAClD,6BACE,MAAuB,EACvB,SAAuC,EACvC,QAA8B;QAD9B,0BAAA,EAAA,YAAuB,wBAAgB;QACvC,yBAAA,EAAA,WAAW,gBAAQ,CAAC,UAAU;QAHhC,iBAmCC;QA9BC,IAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;QAChC,IAAM,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC;QAC5B,IAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,qBAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACnF,IAAM,YAAY,GAChB,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/E,IAAM,IAAI,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAM,OAAO,GACX,cAAc,CAAC,CAAC,CAAC,KAAK,SAAS;YAC7B,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YACxC,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS;gBAC9B,CAAC,CAAC,MAAM,CAAC,OAAO;gBAChB,CAAC,CAAC,CAAC,CAAC;QACR,IAAM,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAM,SAAS,GACb,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS;YAC3B,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YACtC,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,SAAS;gBAChC,CAAC,CAAC,MAAM,CAAC,SAAS;gBAClB,CAAC,CAAC,CAAC,CAAC;QAER,IAAM,QAAQ,yCACT,MAAM,KACT,IAAI,MAAA;YACJ,EAAE,IAAA;YACF,OAAO,SAAA;YACP,SAAS,WAAA,GACV,CAAC;QAEF,QAAA,kBAAM,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,SAAC;;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC,AArCD,CAAyC,yBAAW,GAqCnD;AArCY,kDAAmB","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-transaction\n * @hidden\n */\n\nimport { Messenger } from '@harmony-js/network';\nimport { AddressSuffix } from '@harmony-js/utils';\nimport { Transaction } from './transaction';\nimport { TxParams, TxStatus } from './types';\nimport { defaultMessenger } from './utils';\n\nexport class ShardingTransaction extends Transaction {\n  constructor(\n    params?: TxParams | any,\n    messenger: Messenger = defaultMessenger,\n    txStatus = TxStatus.INTIALIZED,\n  ) {\n    const fromAddress = params.from;\n    const toAddress = params.to;\n    const fromExtraction =\n      fromAddress !== undefined ? fromAddress.split(AddressSuffix) : ['0x', undefined];\n    const toExtraction =\n      toAddress !== undefined ? toAddress.split(AddressSuffix) : ['0x', undefined];\n    const from = fromExtraction[0];\n    const shardID =\n      fromExtraction[1] !== undefined\n        ? Number.parseInt(fromExtraction[1], 10)\n        : params.shardID !== undefined\n        ? params.shardID\n        : 0;\n    const to = toExtraction[0];\n    const toShardID =\n      toExtraction[1] !== undefined\n        ? Number.parseInt(toExtraction[1], 10)\n        : params.toShardID !== undefined\n        ? params.toShardID\n        : 0;\n\n    const reParams = {\n      ...params,\n      from,\n      to,\n      shardID,\n      toShardID,\n    };\n\n    super(reParams, messenger, txStatus);\n  }\n}\n"]}},"error":null,"hash":"4596aa844d75c28a4994d1e4c8b4a193","cacheData":{"env":{}}}