{"id":"../node_modules/@harmony-js/network/dist/providers/defaultFetcher.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/providers/defaultFetcher.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/src/providers/defaultFetcher.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/providers/defaultFetcher.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"cross-fetch","loc":{"line":10,"column":52},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/providers/defaultFetcher.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/cross-fetch/dist/browser-ponyfill.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchRPC = void 0;\nvar tslib_1 = require(\"tslib\");\nvar cross_fetch_1 = tslib_1.__importDefault(require(\"cross-fetch\"));\nexports.fetchRPC = {\n    requestHandler: function (request, headers) {\n        return cross_fetch_1.default(request.url, {\n            method: request.options && request.options.method ? request.options.method : 'POST',\n            cache: 'no-cache',\n            mode: 'cors',\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(request.payload),\n            headers: tslib_1.__assign(tslib_1.__assign({}, headers), (request.options && request.options.headers ? request.options.headers : {})),\n        });\n    },\n    responseHandler: function (response, request, handler) {\n        return response\n            .json()\n            .then(function (body) {\n            return tslib_1.__assign(tslib_1.__assign({}, body), { req: request });\n        })\n            .then(handler);\n    },\n};\n"},"sourceMaps":{"js":{"version":3,"file":"defaultFetcher.js","sourceRoot":"","sources":["../../src/providers/defaultFetcher.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAEH,oEAAgC;AAGnB,QAAA,QAAQ,GAAG;IACtB,cAAc,EAAE,UAAC,OAA0B,EAAE,OAAY;QACvD,OAAA,qBAAK,CAAC,OAAO,CAAC,GAAG,EAAE;YACjB,MAAM,EAAE,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;YACnF,KAAK,EAAE,UAAU;YACjB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,aAAa;YACvB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC;YACrC,OAAO,wCACF,OAAO,GACP,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAC/E;SACF,CAAC;IAXF,CAWE;IACJ,eAAe,EAAE,UAAC,QAAkB,EAAE,OAAwB,EAAE,OAAY;QAC1E,OAAA,QAAQ;aACL,IAAI,EAAE;aACN,IAAI,CAAC,UAAC,IAA0C;YAC/C,6CAAY,IAAI,KAAE,GAAG,EAAE,OAAO,IAAG;QACnC,CAAC,CAAC;aACD,IAAI,CAAC,OAAO,CAAC;IALhB,CAKgB;CACnB,CAAC","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport fetch from 'cross-fetch';\nimport { RPCRequest, RPCResponseBody, RPCError, RPCResult } from '../types';\n\nexport const fetchRPC = {\n  requestHandler: (request: RPCRequest<any[]>, headers: any) =>\n    fetch(request.url, {\n      method: request.options && request.options.method ? request.options.method : 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...headers,\n        ...(request.options && request.options.headers ? request.options.headers : {}),\n      },\n    }),\n  responseHandler: (response: Response, request: RPCRequest<any>, handler: any) =>\n    response\n      .json()\n      .then((body: RPCResponseBody<RPCResult, RPCError>) => {\n        return { ...body, req: request };\n      })\n      .then(handler),\n};\n"]}},"error":null,"hash":"57dbfa8fb064b9da9384c4181d77f44a","cacheData":{"env":{}}}