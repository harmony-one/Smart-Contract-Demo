{"id":"../node_modules/@harmony-js/network/dist/rpcMethod/builder.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/rpcMethod/builder.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/src/rpcMethod/builder.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/rpcMethod/builder.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpc = void 0;\nvar tslib_1 = require(\"tslib\");\n/**\n * @class JsonRpc\n * @description json rpc instance\n * @return {JsonRpc} Json RPC instance\n */\nvar JsonRpc = /** @class */ (function () {\n    function JsonRpc() {\n        var _this = this;\n        /**\n         * @function toPayload\n         * @memberof JsonRpc.prototype\n         * @description convert method and params to payload object\n         * @param  {String} method - RPC method\n         * @param  {Array<object>} params - params that send to RPC\n         * @return {Object} payload object\n         */\n        this.toPayload = function (method, params) {\n            // FIXME: error to be done by shared/errors\n            if (!method) {\n                throw new Error('jsonrpc method should be specified!');\n            }\n            // advance message ID\n            _this.messageId += 1;\n            var sendParams = params === undefined ? [] : typeof params === 'string' ? [params] : tslib_1.__spread(params);\n            return {\n                jsonrpc: '2.0',\n                id: _this.messageId,\n                method: method,\n                params: sendParams,\n            };\n        };\n        /**\n         * @var {Number} messageId\n         * @memberof JsonRpc.prototype\n         * @description message id, default 0\n         */\n        this.messageId = 0;\n    }\n    return JsonRpc;\n}());\nexports.JsonRpc = JsonRpc;\n"},"sourceMaps":{"js":{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../src/rpcMethod/builder.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAIH;;;;GAIG;AACH;IAEE;QAAA,iBAOC;QAED;;;;;;;WAOG;QACH,cAAS,GAAG,UACV,MAA0B,EAC1B,MAAkC;YAElC,2CAA2C;YAC3C,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;aACxD;YAED,qBAAqB;YACrB,KAAI,CAAC,SAAS,IAAI,CAAC,CAAC;YAEpB,IAAM,UAAU,GACd,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAK,MAAM,CAAC,CAAC;YAElF,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,EAAE,EAAE,KAAI,CAAC,SAAS;gBAClB,MAAM,QAAA;gBACN,MAAM,EAAE,UAAU;aACnB,CAAC;QACJ,CAAC,CAAC;QArCA;;;;WAIG;QACH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAgCH,cAAC;AAAD,CAAC,AAzCD,IAyCC;AAEQ,0BAAO","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { RPCRequestPayload } from '../types';\nimport { RPCMethod } from './rpc';\n/**\n * @class JsonRpc\n * @description json rpc instance\n * @return {JsonRpc} Json RPC instance\n */\nclass JsonRpc {\n  messageId: number;\n  constructor() {\n    /**\n     * @var {Number} messageId\n     * @memberof JsonRpc.prototype\n     * @description message id, default 0\n     */\n    this.messageId = 0;\n  }\n\n  /**\n   * @function toPayload\n   * @memberof JsonRpc.prototype\n   * @description convert method and params to payload object\n   * @param  {String} method - RPC method\n   * @param  {Array<object>} params - params that send to RPC\n   * @return {Object} payload object\n   */\n  toPayload = (\n    method: RPCMethod | string,\n    params: string | undefined | any[],\n  ): RPCRequestPayload<any> => {\n    // FIXME: error to be done by shared/errors\n    if (!method) {\n      throw new Error('jsonrpc method should be specified!');\n    }\n\n    // advance message ID\n    this.messageId += 1;\n\n    const sendParams =\n      params === undefined ? [] : typeof params === 'string' ? [params] : [...params];\n\n    return {\n      jsonrpc: '2.0',\n      id: this.messageId,\n      method,\n      params: sendParams,\n    };\n  };\n}\n\nexport { JsonRpc };\n"]}},"error":null,"hash":"89afa1a9ca4b7a2acdb1326aa1f3ea04","cacheData":{"env":{}}}