{"id":"../node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js","dependencies":[{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/src/tracker/subscribeTracker.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/rachit/Projects/demo/web Math Wallet/package.json","includedInParent":true,"mtime":1605273881149},{"name":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/package.json","includedInParent":true,"mtime":1605232158322},{"name":"tslib","loc":{"line":9,"column":22},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js","resolved":"/home/rachit/Projects/demo/node_modules/tslib/tslib.es6.js"},{"name":"../providers/ws","loc":{"line":10,"column":19},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/providers/ws.js"},{"name":"./baseTracker","loc":{"line":11,"column":28},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/baseTracker.js"},{"name":"../rpcMethod/rpc","loc":{"line":12,"column":20},"parent":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/tracker/subscribeTracker.js","resolved":"/home/rachit/Projects/demo/web Math Wallet/node_modules/@harmony-js/network/dist/rpcMethod/rpc.js"}],"generated":{"js":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscribeBlockTracker = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ws_1 = require(\"../providers/ws\");\nvar baseTracker_1 = require(\"./baseTracker\");\nvar rpc_1 = require(\"../rpcMethod/rpc\");\nvar SubscribeBlockTracker = /** @class */ (function (_super) {\n    tslib_1.__extends(SubscribeBlockTracker, _super);\n    // tslint:disable-next-line: variable-name\n    function SubscribeBlockTracker(messenger, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        // parse + validate args\n        if (!messenger) {\n            throw new Error('SubscribeBlockTracker - no provider specified.');\n        }\n        if (!(messenger.provider instanceof ws_1.WSProvider)) {\n            throw new Error('This provider not supported');\n        }\n        // BaseBlockTracker constructor\n        _this = _super.call(this, opts) || this;\n        // config\n        _this.messenger = messenger;\n        _this.subscriptionId = null;\n        return _this;\n    }\n    SubscribeBlockTracker.prototype.checkForLatestBlock = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var result;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getLatestBlock()];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    SubscribeBlockTracker.prototype._start = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var blockNumber, subs, error_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 5, , 6]);\n                        return [4 /*yield*/, this.messenger.send(rpc_1.RPCMethod.BlockNumber, [])];\n                    case 1:\n                        blockNumber = _a.sent();\n                        if (!blockNumber.isError()) return [3 /*break*/, 2];\n                        throw blockNumber.message;\n                    case 2:\n                        if (!blockNumber.isResult()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.messenger.subscribe(rpc_1.RPCMethod.Subscribe, ['newHeads'])];\n                    case 3:\n                        subs = _a.sent();\n                        this.subscriptionId = subs;\n                        subs[0].onData(this._handleSubData);\n                        this._newPotentialLatest(blockNumber);\n                        _a.label = 4;\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        error_1 = _a.sent();\n                        this.emit('error', error_1);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SubscribeBlockTracker.prototype._end = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (this.subscriptionId != null) {\n                    this.messenger.unsubscribe(rpc_1.RPCMethod.UnSubscribe, [this.subscriptionId]);\n                    delete this.subscriptionId;\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    SubscribeBlockTracker.prototype._handleSubData = function (data) {\n        if (\n        // data.method === 'eth_subscription' &&\n        data.params.subscription === this.subscriptionId) {\n            this._newPotentialLatest(data.params.result.number);\n        }\n    };\n    return SubscribeBlockTracker;\n}(baseTracker_1.BaseBlockTracker));\nexports.SubscribeBlockTracker = SubscribeBlockTracker;\n"},"sourceMaps":{"js":{"version":3,"file":"subscribeTracker.js","sourceRoot":"","sources":["../../src/tracker/subscribeTracker.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;;;AAGH,sCAA6C;AAC7C,6CAAiD;AACjD,wCAA6C;AAE7C;IAA2C,iDAAgB;IAGzD,0CAA0C;IAE1C,+BAAY,SAAoB,EAAE,IAAS;QAAT,qBAAA,EAAA,SAAS;QAA3C,iBAaC;QAZC,wBAAwB;QACxB,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QACD,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,YAAY,eAAU,CAAC,EAAE;YAC/C,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAChD;QACD,+BAA+B;QAC/B,QAAA,kBAAM,IAAI,CAAC,SAAC;QACZ,SAAS;QACT,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;IAC7B,CAAC;IAEK,mDAAmB,GAAzB;;;;;4BACiB,qBAAM,IAAI,CAAC,cAAc,EAAE,EAAA;;wBAApC,MAAM,GAAG,SAA2B;wBAC1C,sBAAO,MAAM,EAAC;;;;KACf;IAEK,sCAAM,GAAZ;;;;;;;wBAEwB,qBAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAS,CAAC,WAAW,EAAE,EAAE,CAAC,EAAA;;wBAAlE,WAAW,GAAG,SAAoD;6BAEpE,WAAW,CAAC,OAAO,EAAE,EAArB,wBAAqB;wBACvB,MAAM,WAAW,CAAC,OAAO,CAAC;;6BACjB,WAAW,CAAC,QAAQ,EAAE,EAAtB,wBAAsB;wBAClB,qBAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,eAAS,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,CAAC,EAAA;;wBAAxE,IAAI,GAAG,SAAiE;wBAC9E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAEpC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;;;;;wBAGxC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAK,CAAC,CAAC;;;;;;KAE7B;IAEK,oCAAI,GAAV;;;gBACE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;oBAC/B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,eAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACzE,OAAO,IAAI,CAAC,cAAc,CAAC;iBAC5B;;;;KACF;IAED,8CAAc,GAAd,UAAe,IAAS;QACtB;QACE,wCAAwC;QACxC,IAAI,CAAC,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,cAAc,EAChD;YACA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrD;IACH,CAAC;IACH,4BAAC;AAAD,CAAC,AA1DD,CAA2C,8BAAgB,GA0D1D;AA1DY,sDAAqB","sourcesContent":["/**\n * @packageDocumentation\n * @module harmony-network\n * @hidden\n */\n\nimport { Messenger } from '../messenger/messenger';\nimport { WSProvider } from '../providers/ws';\nimport { BaseBlockTracker } from './baseTracker';\nimport { RPCMethod } from '../rpcMethod/rpc';\n\nexport class SubscribeBlockTracker extends BaseBlockTracker {\n  messenger: Messenger;\n  subscriptionId: any;\n  // tslint:disable-next-line: variable-name\n\n  constructor(messenger: Messenger, opts = {}) {\n    // parse + validate args\n    if (!messenger) {\n      throw new Error('SubscribeBlockTracker - no provider specified.');\n    }\n    if (!(messenger.provider instanceof WSProvider)) {\n      throw new Error('This provider not supported');\n    }\n    // BaseBlockTracker constructor\n    super(opts);\n    // config\n    this.messenger = messenger;\n    this.subscriptionId = null;\n  }\n\n  async checkForLatestBlock() {\n    const result = await this.getLatestBlock();\n    return result;\n  }\n\n  async _start() {\n    try {\n      const blockNumber = await this.messenger.send(RPCMethod.BlockNumber, []);\n\n      if (blockNumber.isError()) {\n        throw blockNumber.message;\n      } else if (blockNumber.isResult()) {\n        const subs = await this.messenger.subscribe(RPCMethod.Subscribe, ['newHeads']);\n        this.subscriptionId = subs;\n        subs[0].onData(this._handleSubData);\n\n        this._newPotentialLatest(blockNumber);\n      }\n    } catch (error) {\n      this.emit('error', error);\n    }\n  }\n\n  async _end() {\n    if (this.subscriptionId != null) {\n      this.messenger.unsubscribe(RPCMethod.UnSubscribe, [this.subscriptionId]);\n      delete this.subscriptionId;\n    }\n  }\n\n  _handleSubData(data: any) {\n    if (\n      // data.method === 'eth_subscription' &&\n      data.params.subscription === this.subscriptionId\n    ) {\n      this._newPotentialLatest(data.params.result.number);\n    }\n  }\n}\n"]}},"error":null,"hash":"f4d042dbbcd9c6b5587156d341058ad4","cacheData":{"env":{}}}